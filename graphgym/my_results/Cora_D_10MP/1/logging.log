GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder()
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(1433, 256, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k10_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNNodeHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(256, 7, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: False
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: PyG
  label_column: none
  label_table: none
  location: local
  name: Cora
  node_encoder: False
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.2]
  split_mode: random
  task: node
  task_type: classification
  to_undirected: False
  transductive: True
  transform: none
  tu_simple: True
delay:
  max_k: 10
devices: None
gnn:
  act: prelu
  agg: add
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 256
  dropout: 0.0
  head: node
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 10
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 100
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/Cora_D_10MP
params: 4001855
print: both
round: 4
run_dir: my_results/Cora_D_10MP/1
seed: 2
share:
  dim_in: 1433
  dim_out: 7
  num_splits: 3
  num_tasks: 1
tensorboard_agg: True
tensorboard_each_run: True
train:
  auto_resume: False
  batch_size: 32
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 20
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 4001855
val: {'epoch': 0, 'loss': 1.9632, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2881, 'accuracy': 0.058}
val: {'epoch': 0, 'loss': 1.9292, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2834, 'accuracy': 0.162}
train: {'epoch': 0, 'eta': 195.0794, 'loss': 1.9489, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9705, 'accuracy': 0.1429}
val: {'epoch': 1, 'loss': 1.8917, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2842, 'accuracy': 0.244}
train: {'epoch': 1, 'eta': 193.1681, 'loss': 1.8337, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9717, 'accuracy': 0.5571}
val: {'epoch': 2, 'loss': 1.8642, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2794, 'accuracy': 0.266}
train: {'epoch': 2, 'eta': 190.9528, 'loss': 1.7279, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9635, 'accuracy': 0.6857}
val: {'epoch': 3, 'loss': 1.8352, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2845, 'accuracy': 0.27}
train: {'epoch': 3, 'eta': 188.9354, 'loss': 1.6433, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9666, 'accuracy': 0.7571}
val: {'epoch': 4, 'loss': 1.8046, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.2877, 'accuracy': 0.282}
train: {'epoch': 4, 'eta': 187.0218, 'loss': 1.556, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.9709, 'accuracy': 0.7857}
val: {'epoch': 5, 'loss': 1.7812, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.2797, 'accuracy': 0.314}
train: {'epoch': 5, 'eta': 185.2556, 'loss': 1.4669, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.9816, 'accuracy': 0.8143}
val: {'epoch': 6, 'loss': 1.7726, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.2796, 'accuracy': 0.342}
train: {'epoch': 6, 'eta': 183.2447, 'loss': 1.3749, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.9678, 'accuracy': 0.8714}
val: {'epoch': 7, 'loss': 1.6762, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.278, 'accuracy': 0.348}
train: {'epoch': 7, 'eta': 181.1769, 'loss': 1.3471, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9619, 'accuracy': 0.8357}
val: {'epoch': 8, 'loss': 1.5267, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.2786, 'accuracy': 0.6}
train: {'epoch': 8, 'eta': 179.1993, 'loss': 1.3074, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9685, 'accuracy': 0.8357}
val: {'epoch': 9, 'loss': 1.4918, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.2828, 'accuracy': 0.684}
train: {'epoch': 9, 'eta': 177.2025, 'loss': 1.1882, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9662, 'accuracy': 0.8643}
val: {'epoch': 10, 'loss': 1.4736, 'lr': 0.0097, 'params': 4001855, 'time_iter': 1.2812, 'accuracy': 0.638}
train: {'epoch': 10, 'eta': 175.2346, 'loss': 1.1068, 'lr': 0.0097, 'params': 4001855, 'time_iter': 1.969, 'accuracy': 0.9214}
val: {'epoch': 11, 'loss': 1.4918, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.2842, 'accuracy': 0.602}
train: {'epoch': 11, 'eta': 173.2589, 'loss': 1.0099, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.968, 'accuracy': 0.9214}
val: {'epoch': 12, 'loss': 1.4269, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.2825, 'accuracy': 0.686}
train: {'epoch': 12, 'eta': 171.2404, 'loss': 0.9315, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.9614, 'accuracy': 0.9357}
val: {'epoch': 13, 'loss': 1.4215, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.2825, 'accuracy': 0.642}
train: {'epoch': 13, 'eta': 169.3095, 'loss': 0.8685, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.9744, 'accuracy': 0.9286}
val: {'epoch': 14, 'loss': 1.3719, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.2896, 'accuracy': 0.684}
train: {'epoch': 14, 'eta': 167.3319, 'loss': 0.7922, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.9671, 'accuracy': 0.95}
val: {'epoch': 15, 'loss': 1.3341, 'lr': 0.0094, 'params': 4001855, 'time_iter': 1.2838, 'accuracy': 0.666}
train: {'epoch': 15, 'eta': 165.3764, 'loss': 0.7239, 'lr': 0.0094, 'params': 4001855, 'time_iter': 1.9711, 'accuracy': 0.9786}
val: {'epoch': 16, 'loss': 1.3131, 'lr': 0.0093, 'params': 4001855, 'time_iter': 1.2851, 'accuracy': 0.676}
train: {'epoch': 16, 'eta': 163.4037, 'loss': 0.6655, 'lr': 0.0093, 'params': 4001855, 'time_iter': 1.968, 'accuracy': 0.9643}
val: {'epoch': 17, 'loss': 1.2834, 'lr': 0.0092, 'params': 4001855, 'time_iter': 1.2823, 'accuracy': 0.68}
train: {'epoch': 17, 'eta': 161.4418, 'loss': 0.5951, 'lr': 0.0092, 'params': 4001855, 'time_iter': 1.9702, 'accuracy': 0.9786}
val: {'epoch': 18, 'loss': 1.247, 'lr': 0.0091, 'params': 4001855, 'time_iter': 1.2817, 'accuracy': 0.698}
train: {'epoch': 18, 'eta': 159.4533, 'loss': 0.5337, 'lr': 0.0091, 'params': 4001855, 'time_iter': 1.9642, 'accuracy': 0.9929}
val: {'epoch': 19, 'loss': 1.2228, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.2874, 'accuracy': 0.728}
train: {'epoch': 19, 'eta': 157.4976, 'loss': 0.4818, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.9718, 'accuracy': 1.0}
val: {'epoch': 20, 'loss': 1.2271, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.2845, 'accuracy': 0.706}
train: {'epoch': 20, 'eta': 155.5266, 'loss': 0.4309, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.9681, 'accuracy': 1.0}
val: {'epoch': 21, 'loss': 1.1828, 'lr': 0.0089, 'params': 4001855, 'time_iter': 1.2848, 'accuracy': 0.704}
train: {'epoch': 21, 'eta': 153.5863, 'loss': 0.3912, 'lr': 0.0089, 'params': 4001855, 'time_iter': 1.9767, 'accuracy': 1.0}
val: {'epoch': 22, 'loss': 1.1709, 'lr': 0.0088, 'params': 4001855, 'time_iter': 1.2832, 'accuracy': 0.7}
train: {'epoch': 22, 'eta': 151.615, 'loss': 0.3535, 'lr': 0.0088, 'params': 4001855, 'time_iter': 1.9684, 'accuracy': 1.0}
val: {'epoch': 23, 'loss': 1.1749, 'lr': 0.0086, 'params': 4001855, 'time_iter': 1.2831, 'accuracy': 0.686}
train: {'epoch': 23, 'eta': 149.6319, 'loss': 0.3195, 'lr': 0.0086, 'params': 4001855, 'time_iter': 1.9646, 'accuracy': 1.0}
val: {'epoch': 24, 'loss': 1.1846, 'lr': 0.0085, 'params': 4001855, 'time_iter': 1.2866, 'accuracy': 0.67}
train: {'epoch': 24, 'eta': 147.6672, 'loss': 0.292, 'lr': 0.0085, 'params': 4001855, 'time_iter': 1.9702, 'accuracy': 1.0}
val: {'epoch': 25, 'loss': 1.2347, 'lr': 0.0084, 'params': 4001855, 'time_iter': 1.2819, 'accuracy': 0.65}
train: {'epoch': 25, 'eta': 145.6962, 'loss': 0.2666, 'lr': 0.0084, 'params': 4001855, 'time_iter': 1.9681, 'accuracy': 1.0}
val: {'epoch': 26, 'loss': 1.224, 'lr': 0.0083, 'params': 4001855, 'time_iter': 1.283, 'accuracy': 0.654}
train: {'epoch': 26, 'eta': 143.7115, 'loss': 0.2449, 'lr': 0.0083, 'params': 4001855, 'time_iter': 1.963, 'accuracy': 1.0}
val: {'epoch': 27, 'loss': 1.2939, 'lr': 0.0082, 'params': 4001855, 'time_iter': 1.2859, 'accuracy': 0.632}
train: {'epoch': 27, 'eta': 141.7369, 'loss': 0.2258, 'lr': 0.0082, 'params': 4001855, 'time_iter': 1.9663, 'accuracy': 1.0}
val: {'epoch': 28, 'loss': 1.1831, 'lr': 0.0081, 'params': 4001855, 'time_iter': 1.2874, 'accuracy': 0.664}
train: {'epoch': 28, 'eta': 139.766, 'loss': 0.2174, 'lr': 0.0081, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 1.0}
val: {'epoch': 29, 'loss': 1.4405, 'lr': 0.0079, 'params': 4001855, 'time_iter': 1.286, 'accuracy': 0.508}
train: {'epoch': 29, 'eta': 137.7958, 'loss': 0.3385, 'lr': 0.0079, 'params': 4001855, 'time_iter': 1.9678, 'accuracy': 0.9429}
val: {'epoch': 30, 'loss': 1.1274, 'lr': 0.0078, 'params': 4001855, 'time_iter': 1.2878, 'accuracy': 0.668}
train: {'epoch': 30, 'eta': 135.8408, 'loss': 0.4013, 'lr': 0.0078, 'params': 4001855, 'time_iter': 1.9746, 'accuracy': 0.9143}
val: {'epoch': 31, 'loss': 1.234, 'lr': 0.0077, 'params': 4001855, 'time_iter': 1.281, 'accuracy': 0.594}
train: {'epoch': 31, 'eta': 133.9004, 'loss': 0.3828, 'lr': 0.0077, 'params': 4001855, 'time_iter': 1.9821, 'accuracy': 0.9357}
val: {'epoch': 32, 'loss': 1.1805, 'lr': 0.0075, 'params': 4001855, 'time_iter': 1.2877, 'accuracy': 0.638}
train: {'epoch': 32, 'eta': 131.9487, 'loss': 0.309, 'lr': 0.0075, 'params': 4001855, 'time_iter': 1.9777, 'accuracy': 0.9714}
val: {'epoch': 33, 'loss': 1.2003, 'lr': 0.0074, 'params': 4001855, 'time_iter': 1.2845, 'accuracy': 0.61}
train: {'epoch': 33, 'eta': 129.9854, 'loss': 0.2428, 'lr': 0.0074, 'params': 4001855, 'time_iter': 1.9725, 'accuracy': 1.0}
val: {'epoch': 34, 'loss': 1.2374, 'lr': 0.0073, 'params': 4001855, 'time_iter': 1.2899, 'accuracy': 0.588}
train: {'epoch': 34, 'eta': 128.0091, 'loss': 0.2137, 'lr': 0.0073, 'params': 4001855, 'time_iter': 1.9658, 'accuracy': 0.9929}
val: {'epoch': 35, 'loss': 1.2611, 'lr': 0.0071, 'params': 4001855, 'time_iter': 1.286, 'accuracy': 0.534}
train: {'epoch': 35, 'eta': 126.0436, 'loss': 0.184, 'lr': 0.0071, 'params': 4001855, 'time_iter': 1.9716, 'accuracy': 1.0}
val: {'epoch': 36, 'loss': 1.2839, 'lr': 0.007, 'params': 4001855, 'time_iter': 1.2915, 'accuracy': 0.534}
train: {'epoch': 36, 'eta': 124.071, 'loss': 0.1676, 'lr': 0.007, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 1.0}
val: {'epoch': 37, 'loss': 1.3093, 'lr': 0.0068, 'params': 4001855, 'time_iter': 1.2917, 'accuracy': 0.536}
train: {'epoch': 37, 'eta': 122.1075, 'loss': 0.1506, 'lr': 0.0068, 'params': 4001855, 'time_iter': 1.973, 'accuracy': 1.0}
val: {'epoch': 38, 'loss': 1.3245, 'lr': 0.0067, 'params': 4001855, 'time_iter': 1.2832, 'accuracy': 0.536}
train: {'epoch': 38, 'eta': 120.1352, 'loss': 0.1395, 'lr': 0.0067, 'params': 4001855, 'time_iter': 1.9677, 'accuracy': 1.0}
val: {'epoch': 39, 'loss': 1.32, 'lr': 0.0065, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.54}
train: {'epoch': 39, 'eta': 118.1623, 'loss': 0.1307, 'lr': 0.0065, 'params': 4001855, 'time_iter': 1.9672, 'accuracy': 1.0}
val: {'epoch': 40, 'loss': 1.2923, 'lr': 0.0064, 'params': 4001855, 'time_iter': 1.2828, 'accuracy': 0.542}
train: {'epoch': 40, 'eta': 116.1932, 'loss': 0.1222, 'lr': 0.0064, 'params': 4001855, 'time_iter': 1.9695, 'accuracy': 1.0}
val: {'epoch': 41, 'loss': 1.2477, 'lr': 0.0062, 'params': 4001855, 'time_iter': 1.2819, 'accuracy': 0.564}
train: {'epoch': 41, 'eta': 114.2174, 'loss': 0.1144, 'lr': 0.0062, 'params': 4001855, 'time_iter': 1.9648, 'accuracy': 1.0}
val: {'epoch': 42, 'loss': 1.1951, 'lr': 0.0061, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.57}
train: {'epoch': 42, 'eta': 112.2422, 'loss': 0.1079, 'lr': 0.0061, 'params': 4001855, 'time_iter': 1.9647, 'accuracy': 1.0}
val: {'epoch': 43, 'loss': 1.1405, 'lr': 0.0059, 'params': 4001855, 'time_iter': 1.281, 'accuracy': 0.59}
train: {'epoch': 43, 'eta': 110.2752, 'loss': 0.1024, 'lr': 0.0059, 'params': 4001855, 'time_iter': 1.9709, 'accuracy': 1.0}
val: {'epoch': 44, 'loss': 1.0892, 'lr': 0.0058, 'params': 4001855, 'time_iter': 1.2833, 'accuracy': 0.628}
train: {'epoch': 44, 'eta': 108.304, 'loss': 0.0976, 'lr': 0.0058, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 1.0}
val: {'epoch': 45, 'loss': 1.047, 'lr': 0.0056, 'params': 4001855, 'time_iter': 1.2915, 'accuracy': 0.666}
train: {'epoch': 45, 'eta': 106.3279, 'loss': 0.0933, 'lr': 0.0056, 'params': 4001855, 'time_iter': 1.9632, 'accuracy': 1.0}
val: {'epoch': 46, 'loss': 1.0177, 'lr': 0.0055, 'params': 4001855, 'time_iter': 1.2863, 'accuracy': 0.678}
train: {'epoch': 46, 'eta': 104.3573, 'loss': 0.0895, 'lr': 0.0055, 'params': 4001855, 'time_iter': 1.9677, 'accuracy': 1.0}
val: {'epoch': 47, 'loss': 1.0019, 'lr': 0.0053, 'params': 4001855, 'time_iter': 1.2931, 'accuracy': 0.68}
train: {'epoch': 47, 'eta': 102.3961, 'loss': 0.0861, 'lr': 0.0053, 'params': 4001855, 'time_iter': 1.9762, 'accuracy': 1.0}
val: {'epoch': 48, 'loss': 0.998, 'lr': 0.0052, 'params': 4001855, 'time_iter': 1.279, 'accuracy': 0.686}
train: {'epoch': 48, 'eta': 100.4209, 'loss': 0.0832, 'lr': 0.0052, 'params': 4001855, 'time_iter': 1.9634, 'accuracy': 1.0}
val: {'epoch': 49, 'loss': 1.0041, 'lr': 0.005, 'params': 4001855, 'time_iter': 1.2859, 'accuracy': 0.69}
train: {'epoch': 49, 'eta': 98.4546, 'loss': 0.0805, 'lr': 0.005, 'params': 4001855, 'time_iter': 1.9718, 'accuracy': 1.0}
val: {'epoch': 50, 'loss': 1.0165, 'lr': 0.0048, 'params': 4001855, 'time_iter': 1.2905, 'accuracy': 0.69}
train: {'epoch': 50, 'eta': 96.48, 'loss': 0.078, 'lr': 0.0048, 'params': 4001855, 'time_iter': 1.9633, 'accuracy': 1.0}
val: {'epoch': 51, 'loss': 1.0321, 'lr': 0.0047, 'params': 4001855, 'time_iter': 1.2849, 'accuracy': 0.686}
train: {'epoch': 51, 'eta': 94.5102, 'loss': 0.0757, 'lr': 0.0047, 'params': 4001855, 'time_iter': 1.9681, 'accuracy': 1.0}
val: {'epoch': 52, 'loss': 1.0483, 'lr': 0.0045, 'params': 4001855, 'time_iter': 1.284, 'accuracy': 0.684}
train: {'epoch': 52, 'eta': 92.5961, 'loss': 0.0737, 'lr': 0.0045, 'params': 4001855, 'time_iter': 2.0308, 'accuracy': 1.0}
val: {'epoch': 53, 'loss': 1.0647, 'lr': 0.0044, 'params': 4001855, 'time_iter': 1.2866, 'accuracy': 0.688}
train: {'epoch': 53, 'eta': 90.6303, 'loss': 0.0719, 'lr': 0.0044, 'params': 4001855, 'time_iter': 1.9752, 'accuracy': 1.0}
val: {'epoch': 54, 'loss': 1.0818, 'lr': 0.0042, 'params': 4001855, 'time_iter': 1.2893, 'accuracy': 0.686}
train: {'epoch': 54, 'eta': 88.6603, 'loss': 0.0703, 'lr': 0.0042, 'params': 4001855, 'time_iter': 1.9705, 'accuracy': 1.0}
val: {'epoch': 55, 'loss': 1.1004, 'lr': 0.0041, 'params': 4001855, 'time_iter': 1.2913, 'accuracy': 0.682}
train: {'epoch': 55, 'eta': 86.6902, 'loss': 0.0688, 'lr': 0.0041, 'params': 4001855, 'time_iter': 1.9704, 'accuracy': 1.0}
val: {'epoch': 56, 'loss': 1.1193, 'lr': 0.0039, 'params': 4001855, 'time_iter': 1.288, 'accuracy': 0.666}
train: {'epoch': 56, 'eta': 84.7183, 'loss': 0.0674, 'lr': 0.0039, 'params': 4001855, 'time_iter': 1.968, 'accuracy': 1.0}
val: {'epoch': 57, 'loss': 1.1379, 'lr': 0.0038, 'params': 4001855, 'time_iter': 1.2949, 'accuracy': 0.656}
train: {'epoch': 57, 'eta': 82.7493, 'loss': 0.0661, 'lr': 0.0038, 'params': 4001855, 'time_iter': 1.9718, 'accuracy': 1.0}
val: {'epoch': 58, 'loss': 1.1552, 'lr': 0.0036, 'params': 4001855, 'time_iter': 1.2999, 'accuracy': 0.65}
train: {'epoch': 58, 'eta': 80.7836, 'loss': 0.0649, 'lr': 0.0036, 'params': 4001855, 'time_iter': 1.9768, 'accuracy': 1.0}
val: {'epoch': 59, 'loss': 1.171, 'lr': 0.0035, 'params': 4001855, 'time_iter': 1.2834, 'accuracy': 0.646}
train: {'epoch': 59, 'eta': 78.8189, 'loss': 0.0638, 'lr': 0.0035, 'params': 4001855, 'time_iter': 1.9787, 'accuracy': 1.0}
val: {'epoch': 60, 'loss': 1.1852, 'lr': 0.0033, 'params': 4001855, 'time_iter': 1.2841, 'accuracy': 0.652}
train: {'epoch': 60, 'eta': 76.8468, 'loss': 0.0629, 'lr': 0.0033, 'params': 4001855, 'time_iter': 1.9679, 'accuracy': 1.0}
val: {'epoch': 61, 'loss': 1.1979, 'lr': 0.0032, 'params': 4001855, 'time_iter': 1.3011, 'accuracy': 0.652}
train: {'epoch': 61, 'eta': 74.8806, 'loss': 0.062, 'lr': 0.0032, 'params': 4001855, 'time_iter': 1.9774, 'accuracy': 1.0}
val: {'epoch': 62, 'loss': 1.2096, 'lr': 0.003, 'params': 4001855, 'time_iter': 1.2838, 'accuracy': 0.65}
train: {'epoch': 62, 'eta': 72.9077, 'loss': 0.0612, 'lr': 0.003, 'params': 4001855, 'time_iter': 1.9666, 'accuracy': 1.0}
val: {'epoch': 63, 'loss': 1.2208, 'lr': 0.0029, 'params': 4001855, 'time_iter': 1.2895, 'accuracy': 0.65}
train: {'epoch': 63, 'eta': 70.9357, 'loss': 0.0604, 'lr': 0.0029, 'params': 4001855, 'time_iter': 1.9677, 'accuracy': 1.0}
val: {'epoch': 64, 'loss': 1.2314, 'lr': 0.0027, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.646}
train: {'epoch': 64, 'eta': 68.9649, 'loss': 0.0597, 'lr': 0.0027, 'params': 4001855, 'time_iter': 1.9696, 'accuracy': 1.0}
val: {'epoch': 65, 'loss': 1.2412, 'lr': 0.0026, 'params': 4001855, 'time_iter': 1.2838, 'accuracy': 0.646}
train: {'epoch': 65, 'eta': 66.9961, 'loss': 0.0591, 'lr': 0.0026, 'params': 4001855, 'time_iter': 1.9737, 'accuracy': 1.0}
val: {'epoch': 66, 'loss': 1.2484, 'lr': 0.0025, 'params': 4001855, 'time_iter': 1.2888, 'accuracy': 0.648}
train: {'epoch': 66, 'eta': 65.0261, 'loss': 0.0585, 'lr': 0.0025, 'params': 4001855, 'time_iter': 1.9713, 'accuracy': 1.0}
val: {'epoch': 67, 'loss': 1.2535, 'lr': 0.0023, 'params': 4001855, 'time_iter': 1.285, 'accuracy': 0.646}
train: {'epoch': 67, 'eta': 63.0622, 'loss': 0.0579, 'lr': 0.0023, 'params': 4001855, 'time_iter': 1.9844, 'accuracy': 1.0}
val: {'epoch': 68, 'loss': 1.2565, 'lr': 0.0022, 'params': 4001855, 'time_iter': 1.2842, 'accuracy': 0.642}
train: {'epoch': 68, 'eta': 61.0925, 'loss': 0.0574, 'lr': 0.0022, 'params': 4001855, 'time_iter': 1.9731, 'accuracy': 1.0}
val: {'epoch': 69, 'loss': 1.2577, 'lr': 0.0021, 'params': 4001855, 'time_iter': 1.2816, 'accuracy': 0.64}
train: {'epoch': 69, 'eta': 59.1204, 'loss': 0.0569, 'lr': 0.0021, 'params': 4001855, 'time_iter': 1.9674, 'accuracy': 1.0}
val: {'epoch': 70, 'loss': 1.257, 'lr': 0.0019, 'params': 4001855, 'time_iter': 1.2861, 'accuracy': 0.644}
train: {'epoch': 70, 'eta': 57.1495, 'loss': 0.0565, 'lr': 0.0019, 'params': 4001855, 'time_iter': 1.9703, 'accuracy': 1.0}
val: {'epoch': 71, 'loss': 1.2541, 'lr': 0.0018, 'params': 4001855, 'time_iter': 1.2842, 'accuracy': 0.644}
train: {'epoch': 71, 'eta': 55.1778, 'loss': 0.0561, 'lr': 0.0018, 'params': 4001855, 'time_iter': 1.968, 'accuracy': 1.0}
val: {'epoch': 72, 'loss': 1.249, 'lr': 0.0017, 'params': 4001855, 'time_iter': 1.2801, 'accuracy': 0.644}
train: {'epoch': 72, 'eta': 53.2068, 'loss': 0.0558, 'lr': 0.0017, 'params': 4001855, 'time_iter': 1.9696, 'accuracy': 1.0}
val: {'epoch': 73, 'loss': 1.242, 'lr': 0.0016, 'params': 4001855, 'time_iter': 1.2867, 'accuracy': 0.644}
train: {'epoch': 73, 'eta': 51.2339, 'loss': 0.0554, 'lr': 0.0016, 'params': 4001855, 'time_iter': 1.9642, 'accuracy': 1.0}
val: {'epoch': 74, 'loss': 1.2341, 'lr': 0.0015, 'params': 4001855, 'time_iter': 1.2862, 'accuracy': 0.648}
train: {'epoch': 74, 'eta': 49.263, 'loss': 0.0551, 'lr': 0.0015, 'params': 4001855, 'time_iter': 1.9694, 'accuracy': 1.0}
val: {'epoch': 75, 'loss': 1.2247, 'lr': 0.0014, 'params': 4001855, 'time_iter': 1.2858, 'accuracy': 0.648}
train: {'epoch': 75, 'eta': 47.2939, 'loss': 0.0549, 'lr': 0.0014, 'params': 4001855, 'time_iter': 1.975, 'accuracy': 1.0}
val: {'epoch': 76, 'loss': 1.2135, 'lr': 0.0012, 'params': 4001855, 'time_iter': 1.289, 'accuracy': 0.652}
train: {'epoch': 76, 'eta': 45.3255, 'loss': 0.0546, 'lr': 0.0012, 'params': 4001855, 'time_iter': 1.9778, 'accuracy': 1.0}
val: {'epoch': 77, 'loss': 1.2006, 'lr': 0.0011, 'params': 4001855, 'time_iter': 1.2878, 'accuracy': 0.656}
train: {'epoch': 77, 'eta': 43.3583, 'loss': 0.0544, 'lr': 0.0011, 'params': 4001855, 'time_iter': 1.9829, 'accuracy': 1.0}
val: {'epoch': 78, 'loss': 1.1867, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.2921, 'accuracy': 0.656}
train: {'epoch': 78, 'eta': 41.3885, 'loss': 0.0542, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.9747, 'accuracy': 1.0}
val: {'epoch': 79, 'loss': 1.1711, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.66}
train: {'epoch': 79, 'eta': 39.4162, 'loss': 0.054, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.9653, 'accuracy': 1.0}
val: {'epoch': 80, 'loss': 1.154, 'lr': 0.0009, 'params': 4001855, 'time_iter': 1.2845, 'accuracy': 0.664}
train: {'epoch': 80, 'eta': 37.4463, 'loss': 0.0538, 'lr': 0.0009, 'params': 4001855, 'time_iter': 1.9746, 'accuracy': 1.0}
val: {'epoch': 81, 'loss': 1.1356, 'lr': 0.0008, 'params': 4001855, 'time_iter': 1.2807, 'accuracy': 0.666}
train: {'epoch': 81, 'eta': 35.4752, 'loss': 0.0536, 'lr': 0.0008, 'params': 4001855, 'time_iter': 1.97, 'accuracy': 1.0}
val: {'epoch': 82, 'loss': 1.1164, 'lr': 0.0007, 'params': 4001855, 'time_iter': 1.2859, 'accuracy': 0.672}
train: {'epoch': 82, 'eta': 33.5031, 'loss': 0.0535, 'lr': 0.0007, 'params': 4001855, 'time_iter': 1.9646, 'accuracy': 1.0}
val: {'epoch': 83, 'loss': 1.0973, 'lr': 0.0006, 'params': 4001855, 'time_iter': 1.2876, 'accuracy': 0.692}
train: {'epoch': 83, 'eta': 31.5334, 'loss': 0.0534, 'lr': 0.0006, 'params': 4001855, 'time_iter': 1.9761, 'accuracy': 1.0}
val: {'epoch': 84, 'loss': 1.0786, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.2861, 'accuracy': 0.694}
train: {'epoch': 84, 'eta': 29.5619, 'loss': 0.0533, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.9672, 'accuracy': 1.0}
val: {'epoch': 85, 'loss': 1.061, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.2858, 'accuracy': 0.702}
train: {'epoch': 85, 'eta': 27.5921, 'loss': 0.0532, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.9773, 'accuracy': 1.0}
val: {'epoch': 86, 'loss': 1.0443, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.2913, 'accuracy': 0.704}
train: {'epoch': 86, 'eta': 25.6211, 'loss': 0.0531, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.9694, 'accuracy': 1.0}
val: {'epoch': 87, 'loss': 1.0284, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.28, 'accuracy': 0.704}
train: {'epoch': 87, 'eta': 23.6498, 'loss': 0.053, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 1.0}
val: {'epoch': 88, 'loss': 1.0135, 'lr': 0.0003, 'params': 4001855, 'time_iter': 1.2835, 'accuracy': 0.704}
train: {'epoch': 88, 'eta': 21.678, 'loss': 0.053, 'lr': 0.0003, 'params': 4001855, 'time_iter': 1.9635, 'accuracy': 1.0}
val: {'epoch': 89, 'loss': 0.9995, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.2923, 'accuracy': 0.712}
train: {'epoch': 89, 'eta': 19.7071, 'loss': 0.0529, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9689, 'accuracy': 1.0}
val: {'epoch': 90, 'loss': 0.9865, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.2873, 'accuracy': 0.712}
train: {'epoch': 90, 'eta': 17.7363, 'loss': 0.0529, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9694, 'accuracy': 1.0}
val: {'epoch': 91, 'loss': 0.9747, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.293, 'accuracy': 0.718}
train: {'epoch': 91, 'eta': 15.7653, 'loss': 0.0528, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9675, 'accuracy': 1.0}
val: {'epoch': 92, 'loss': 0.9638, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2804, 'accuracy': 0.722}
train: {'epoch': 92, 'eta': 13.7943, 'loss': 0.0528, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9657, 'accuracy': 1.0}
val: {'epoch': 93, 'loss': 0.954, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.732}
train: {'epoch': 93, 'eta': 11.8234, 'loss': 0.0528, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9659, 'accuracy': 1.0}
val: {'epoch': 94, 'loss': 0.9452, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2916, 'accuracy': 0.738}
train: {'epoch': 94, 'eta': 9.8524, 'loss': 0.0528, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9634, 'accuracy': 1.0}
val: {'epoch': 95, 'loss': 0.9375, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2803, 'accuracy': 0.74}
train: {'epoch': 95, 'eta': 7.8822, 'loss': 0.0527, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9766, 'accuracy': 1.0}
val: {'epoch': 96, 'loss': 0.9311, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2819, 'accuracy': 0.738}
train: {'epoch': 96, 'eta': 5.9114, 'loss': 0.0527, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9615, 'accuracy': 1.0}
val: {'epoch': 97, 'loss': 0.9258, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.736}
train: {'epoch': 97, 'eta': 3.9409, 'loss': 0.0527, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9694, 'accuracy': 1.0}
val: {'epoch': 98, 'loss': 0.9217, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2866, 'accuracy': 0.736}
train: {'epoch': 98, 'eta': 1.9705, 'loss': 0.0527, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9762, 'accuracy': 1.0}
val: {'epoch': 99, 'loss': 0.9187, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2875, 'accuracy': 0.74}
train: {'epoch': 99, 'eta': 0.0, 'loss': 0.0527, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9742, 'accuracy': 1.0}
test: {'epoch': 100, 'loss': 0.8319, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.1625, 'accuracy': 0.752}
