GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder()
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(1433, 256, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k10_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(256, 256)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNNodeHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(256, 7, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: False
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: PyG
  label_column: none
  label_table: none
  location: local
  name: Cora
  node_encoder: False
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.2]
  split_mode: random
  task: node
  task_type: classification
  to_undirected: False
  transductive: True
  transform: none
  tu_simple: True
delay:
  max_k: 10
devices: None
gnn:
  act: prelu
  agg: add
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 256
  dropout: 0.0
  head: node
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 10
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 100
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/Cora_D_10MP
params: 4001855
print: both
round: 4
run_dir: my_results/Cora_D_10MP/2
seed: 3
share:
  dim_in: 1433
  dim_out: 7
  num_splits: 3
  num_tasks: 1
tensorboard_agg: True
tensorboard_each_run: True
train:
  auto_resume: False
  batch_size: 32
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 20
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 4001855
val: {'epoch': 0, 'loss': 1.9551, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2929, 'accuracy': 0.122}
val: {'epoch': 0, 'loss': 1.9284, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.284, 'accuracy': 0.236}
train: {'epoch': 0, 'eta': 197.0485, 'loss': 1.9452, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9904, 'accuracy': 0.15}
val: {'epoch': 1, 'loss': 1.8904, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2846, 'accuracy': 0.258}
train: {'epoch': 1, 'eta': 193.8889, 'loss': 1.8352, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 0.5786}
val: {'epoch': 2, 'loss': 1.8636, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2827, 'accuracy': 0.262}
train: {'epoch': 2, 'eta': 191.4951, 'loss': 1.7228, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9656, 'accuracy': 0.6929}
val: {'epoch': 3, 'loss': 1.8363, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.2848, 'accuracy': 0.294}
train: {'epoch': 3, 'eta': 189.4364, 'loss': 1.6359, 'lr': 0.01, 'params': 4001855, 'time_iter': 1.9707, 'accuracy': 0.7643}
val: {'epoch': 4, 'loss': 1.8073, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.289, 'accuracy': 0.326}
train: {'epoch': 4, 'eta': 187.3345, 'loss': 1.5482, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 0.8}
val: {'epoch': 5, 'loss': 1.7909, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.2815, 'accuracy': 0.384}
train: {'epoch': 5, 'eta': 185.2773, 'loss': 1.4579, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 0.8286}
val: {'epoch': 6, 'loss': 1.781, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.289, 'accuracy': 0.448}
train: {'epoch': 6, 'eta': 183.3196, 'loss': 1.366, 'lr': 0.0099, 'params': 4001855, 'time_iter': 1.972, 'accuracy': 0.8929}
val: {'epoch': 7, 'loss': 1.7219, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.2876, 'accuracy': 0.348}
train: {'epoch': 7, 'eta': 181.3203, 'loss': 1.3646, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9687, 'accuracy': 0.8214}
val: {'epoch': 8, 'loss': 1.5925, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.2979, 'accuracy': 0.63}
train: {'epoch': 8, 'eta': 179.4226, 'loss': 1.3206, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9781, 'accuracy': 0.8143}
val: {'epoch': 9, 'loss': 1.509, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.2807, 'accuracy': 0.648}
train: {'epoch': 9, 'eta': 177.4941, 'loss': 1.1802, 'lr': 0.0098, 'params': 4001855, 'time_iter': 1.9765, 'accuracy': 0.8857}
val: {'epoch': 10, 'loss': 1.496, 'lr': 0.0097, 'params': 4001855, 'time_iter': 1.2834, 'accuracy': 0.638}
train: {'epoch': 10, 'eta': 175.4983, 'loss': 1.0937, 'lr': 0.0097, 'params': 4001855, 'time_iter': 1.9692, 'accuracy': 0.9214}
val: {'epoch': 11, 'loss': 1.4484, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.2838, 'accuracy': 0.666}
train: {'epoch': 11, 'eta': 173.503, 'loss': 1.0111, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.9687, 'accuracy': 0.9214}
val: {'epoch': 12, 'loss': 1.4388, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.2848, 'accuracy': 0.656}
train: {'epoch': 12, 'eta': 171.5466, 'loss': 0.9254, 'lr': 0.0096, 'params': 4001855, 'time_iter': 1.9739, 'accuracy': 0.9429}
val: {'epoch': 13, 'loss': 1.3978, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.2846, 'accuracy': 0.684}
train: {'epoch': 13, 'eta': 169.5122, 'loss': 0.8538, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.9616, 'accuracy': 0.9286}
val: {'epoch': 14, 'loss': 1.4089, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.2811, 'accuracy': 0.642}
train: {'epoch': 14, 'eta': 167.5212, 'loss': 0.7761, 'lr': 0.0095, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 0.9643}
val: {'epoch': 15, 'loss': 1.3385, 'lr': 0.0094, 'params': 4001855, 'time_iter': 1.3449, 'accuracy': 0.668}
train: {'epoch': 15, 'eta': 165.5659, 'loss': 0.7051, 'lr': 0.0094, 'params': 4001855, 'time_iter': 1.9738, 'accuracy': 0.9857}
val: {'epoch': 16, 'loss': 1.3059, 'lr': 0.0093, 'params': 4001855, 'time_iter': 1.7258, 'accuracy': 0.65}
train: {'epoch': 16, 'eta': 164.2444, 'loss': 0.6698, 'lr': 0.0093, 'params': 4001855, 'time_iter': 2.104, 'accuracy': 0.9714}
val: {'epoch': 17, 'loss': 1.2556, 'lr': 0.0092, 'params': 4001855, 'time_iter': 1.2854, 'accuracy': 0.674}
train: {'epoch': 17, 'eta': 168.0415, 'loss': 0.5971, 'lr': 0.0092, 'params': 4001855, 'time_iter': 3.2467, 'accuracy': 0.9786}
val: {'epoch': 18, 'loss': 1.2745, 'lr': 0.0091, 'params': 4001855, 'time_iter': 1.2878, 'accuracy': 0.648}
train: {'epoch': 18, 'eta': 165.6382, 'loss': 0.5407, 'lr': 0.0091, 'params': 4001855, 'time_iter': 1.9662, 'accuracy': 0.9929}
val: {'epoch': 19, 'loss': 1.2578, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.2883, 'accuracy': 0.64}
train: {'epoch': 19, 'eta': 163.2825, 'loss': 0.4831, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.9672, 'accuracy': 1.0}
val: {'epoch': 20, 'loss': 1.1928, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.2864, 'accuracy': 0.674}
train: {'epoch': 20, 'eta': 160.9627, 'loss': 0.4334, 'lr': 0.009, 'params': 4001855, 'time_iter': 1.9669, 'accuracy': 1.0}
val: {'epoch': 21, 'loss': 1.2535, 'lr': 0.0089, 'params': 4001855, 'time_iter': 1.2817, 'accuracy': 0.612}
train: {'epoch': 21, 'eta': 158.6636, 'loss': 0.3911, 'lr': 0.0089, 'params': 4001855, 'time_iter': 1.9637, 'accuracy': 1.0}
val: {'epoch': 22, 'loss': 1.2477, 'lr': 0.0088, 'params': 4001855, 'time_iter': 1.2849, 'accuracy': 0.626}
train: {'epoch': 22, 'eta': 156.4001, 'loss': 0.3526, 'lr': 0.0088, 'params': 4001855, 'time_iter': 1.9657, 'accuracy': 1.0}
val: {'epoch': 23, 'loss': 1.1794, 'lr': 0.0086, 'params': 4001855, 'time_iter': 1.2847, 'accuracy': 0.674}
train: {'epoch': 23, 'eta': 154.1743, 'loss': 0.3206, 'lr': 0.0086, 'params': 4001855, 'time_iter': 1.9697, 'accuracy': 1.0}
val: {'epoch': 24, 'loss': 1.1879, 'lr': 0.0085, 'params': 4001855, 'time_iter': 1.2865, 'accuracy': 0.67}
train: {'epoch': 24, 'eta': 151.9756, 'loss': 0.2905, 'lr': 0.0085, 'params': 4001855, 'time_iter': 1.9719, 'accuracy': 1.0}
val: {'epoch': 25, 'loss': 1.1831, 'lr': 0.0084, 'params': 4001855, 'time_iter': 1.2917, 'accuracy': 0.67}
train: {'epoch': 25, 'eta': 149.7941, 'loss': 0.2655, 'lr': 0.0084, 'params': 4001855, 'time_iter': 1.9718, 'accuracy': 1.0}
val: {'epoch': 26, 'loss': 1.2123, 'lr': 0.0083, 'params': 4001855, 'time_iter': 1.2807, 'accuracy': 0.646}
train: {'epoch': 26, 'eta': 147.6277, 'loss': 0.2419, 'lr': 0.0083, 'params': 4001855, 'time_iter': 1.9717, 'accuracy': 1.0}
val: {'epoch': 27, 'loss': 1.2386, 'lr': 0.0082, 'params': 4001855, 'time_iter': 1.2877, 'accuracy': 0.622}
train: {'epoch': 27, 'eta': 145.4713, 'loss': 0.2216, 'lr': 0.0082, 'params': 4001855, 'time_iter': 1.9701, 'accuracy': 1.0}
val: {'epoch': 28, 'loss': 1.24, 'lr': 0.0081, 'params': 4001855, 'time_iter': 1.2866, 'accuracy': 0.614}
train: {'epoch': 28, 'eta': 143.3277, 'loss': 0.2042, 'lr': 0.0081, 'params': 4001855, 'time_iter': 1.9701, 'accuracy': 1.0}
val: {'epoch': 29, 'loss': 1.3952, 'lr': 0.0079, 'params': 4001855, 'time_iter': 1.2873, 'accuracy': 0.53}
train: {'epoch': 29, 'eta': 141.2231, 'loss': 0.1901, 'lr': 0.0079, 'params': 4001855, 'time_iter': 1.9819, 'accuracy': 1.0}
val: {'epoch': 30, 'loss': 1.1774, 'lr': 0.0078, 'params': 4001855, 'time_iter': 1.285, 'accuracy': 0.644}
train: {'epoch': 30, 'eta': 139.1027, 'loss': 0.1879, 'lr': 0.0078, 'params': 4001855, 'time_iter': 1.9712, 'accuracy': 1.0}
val: {'epoch': 31, 'loss': 1.151, 'lr': 0.0077, 'params': 4001855, 'time_iter': 1.2833, 'accuracy': 0.628}
train: {'epoch': 31, 'eta': 136.9835, 'loss': 0.4242, 'lr': 0.0077, 'params': 4001855, 'time_iter': 1.9674, 'accuracy': 0.9071}
val: {'epoch': 32, 'loss': 1.7353, 'lr': 0.0075, 'params': 4001855, 'time_iter': 1.2865, 'accuracy': 0.45}
train: {'epoch': 32, 'eta': 134.8717, 'loss': 0.7709, 'lr': 0.0075, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 0.7571}
val: {'epoch': 33, 'loss': 1.1957, 'lr': 0.0074, 'params': 4001855, 'time_iter': 1.2839, 'accuracy': 0.612}
train: {'epoch': 33, 'eta': 132.7767, 'loss': 0.6076, 'lr': 0.0074, 'params': 4001855, 'time_iter': 1.9708, 'accuracy': 0.8357}
val: {'epoch': 34, 'loss': 1.1383, 'lr': 0.0073, 'params': 4001855, 'time_iter': 1.2932, 'accuracy': 0.646}
train: {'epoch': 34, 'eta': 130.6932, 'loss': 0.4035, 'lr': 0.0073, 'params': 4001855, 'time_iter': 1.9732, 'accuracy': 0.9286}
val: {'epoch': 35, 'loss': 1.2863, 'lr': 0.0071, 'params': 4001855, 'time_iter': 1.2871, 'accuracy': 0.536}
train: {'epoch': 35, 'eta': 128.614, 'loss': 0.3329, 'lr': 0.0071, 'params': 4001855, 'time_iter': 1.9721, 'accuracy': 0.95}
val: {'epoch': 36, 'loss': 1.4313, 'lr': 0.007, 'params': 4001855, 'time_iter': 1.2886, 'accuracy': 0.49}
train: {'epoch': 36, 'eta': 126.526, 'loss': 0.271, 'lr': 0.007, 'params': 4001855, 'time_iter': 1.9635, 'accuracy': 0.9929}
val: {'epoch': 37, 'loss': 1.4557, 'lr': 0.0068, 'params': 4001855, 'time_iter': 1.2976, 'accuracy': 0.496}
train: {'epoch': 37, 'eta': 124.462, 'loss': 0.2391, 'lr': 0.0068, 'params': 4001855, 'time_iter': 1.9743, 'accuracy': 0.9929}
val: {'epoch': 38, 'loss': 1.4181, 'lr': 0.0067, 'params': 4001855, 'time_iter': 1.2849, 'accuracy': 0.526}
train: {'epoch': 38, 'eta': 122.3928, 'loss': 0.2055, 'lr': 0.0067, 'params': 4001855, 'time_iter': 1.968, 'accuracy': 0.9929}
val: {'epoch': 39, 'loss': 1.3625, 'lr': 0.0065, 'params': 4001855, 'time_iter': 1.2833, 'accuracy': 0.542}
train: {'epoch': 39, 'eta': 120.3233, 'loss': 0.1789, 'lr': 0.0065, 'params': 4001855, 'time_iter': 1.9644, 'accuracy': 1.0}
val: {'epoch': 40, 'loss': 1.3019, 'lr': 0.0064, 'params': 4001855, 'time_iter': 1.2866, 'accuracy': 0.56}
train: {'epoch': 40, 'eta': 118.3483, 'loss': 0.1606, 'lr': 0.0064, 'params': 4001855, 'time_iter': 2.0265, 'accuracy': 1.0}
val: {'epoch': 41, 'loss': 1.2515, 'lr': 0.0062, 'params': 4001855, 'time_iter': 1.2867, 'accuracy': 0.578}
train: {'epoch': 41, 'eta': 116.2882, 'loss': 0.1449, 'lr': 0.0062, 'params': 4001855, 'time_iter': 1.9666, 'accuracy': 1.0}
val: {'epoch': 42, 'loss': 1.2161, 'lr': 0.0061, 'params': 4001855, 'time_iter': 1.2853, 'accuracy': 0.578}
train: {'epoch': 42, 'eta': 114.2347, 'loss': 0.1325, 'lr': 0.0061, 'params': 4001855, 'time_iter': 1.9684, 'accuracy': 1.0}
val: {'epoch': 43, 'loss': 1.1893, 'lr': 0.0059, 'params': 4001855, 'time_iter': 1.2868, 'accuracy': 0.608}
train: {'epoch': 43, 'eta': 112.1855, 'loss': 0.1243, 'lr': 0.0059, 'params': 4001855, 'time_iter': 1.9687, 'accuracy': 1.0}
val: {'epoch': 44, 'loss': 1.1683, 'lr': 0.0058, 'params': 4001855, 'time_iter': 1.2833, 'accuracy': 0.622}
train: {'epoch': 44, 'eta': 110.1396, 'loss': 0.117, 'lr': 0.0058, 'params': 4001855, 'time_iter': 1.9684, 'accuracy': 1.0}
val: {'epoch': 45, 'loss': 1.1503, 'lr': 0.0056, 'params': 4001855, 'time_iter': 1.2829, 'accuracy': 0.65}
train: {'epoch': 45, 'eta': 108.0954, 'loss': 0.1092, 'lr': 0.0056, 'params': 4001855, 'time_iter': 1.9671, 'accuracy': 1.0}
val: {'epoch': 46, 'loss': 1.1357, 'lr': 0.0055, 'params': 4001855, 'time_iter': 1.2835, 'accuracy': 0.656}
train: {'epoch': 46, 'eta': 106.0587, 'loss': 0.1025, 'lr': 0.0055, 'params': 4001855, 'time_iter': 1.9708, 'accuracy': 1.0}
val: {'epoch': 47, 'loss': 1.1291, 'lr': 0.0053, 'params': 4001855, 'time_iter': 1.2798, 'accuracy': 0.66}
train: {'epoch': 47, 'eta': 104.0149, 'loss': 0.0973, 'lr': 0.0053, 'params': 4001855, 'time_iter': 1.9617, 'accuracy': 1.0}
val: {'epoch': 48, 'loss': 1.1299, 'lr': 0.0052, 'params': 4001855, 'time_iter': 1.29, 'accuracy': 0.656}
train: {'epoch': 48, 'eta': 101.9806, 'loss': 0.0931, 'lr': 0.0052, 'params': 4001855, 'time_iter': 1.9675, 'accuracy': 1.0}
val: {'epoch': 49, 'loss': 1.1372, 'lr': 0.005, 'params': 4001855, 'time_iter': 1.2867, 'accuracy': 0.644}
train: {'epoch': 49, 'eta': 99.9486, 'loss': 0.0893, 'lr': 0.005, 'params': 4001855, 'time_iter': 1.9673, 'accuracy': 1.0}
val: {'epoch': 50, 'loss': 1.1495, 'lr': 0.0048, 'params': 4001855, 'time_iter': 1.2885, 'accuracy': 0.644}
train: {'epoch': 50, 'eta': 97.9188, 'loss': 0.0858, 'lr': 0.0048, 'params': 4001855, 'time_iter': 1.9669, 'accuracy': 1.0}
val: {'epoch': 51, 'loss': 1.1672, 'lr': 0.0047, 'params': 4001855, 'time_iter': 1.288, 'accuracy': 0.634}
train: {'epoch': 51, 'eta': 95.8929, 'loss': 0.0828, 'lr': 0.0047, 'params': 4001855, 'time_iter': 1.9685, 'accuracy': 1.0}
val: {'epoch': 52, 'loss': 1.1901, 'lr': 0.0045, 'params': 4001855, 'time_iter': 1.2844, 'accuracy': 0.632}
train: {'epoch': 52, 'eta': 93.8767, 'loss': 0.0801, 'lr': 0.0045, 'params': 4001855, 'time_iter': 1.977, 'accuracy': 1.0}
val: {'epoch': 53, 'loss': 1.2168, 'lr': 0.0044, 'params': 4001855, 'time_iter': 1.2854, 'accuracy': 0.622}
train: {'epoch': 53, 'eta': 91.8602, 'loss': 0.0778, 'lr': 0.0044, 'params': 4001855, 'time_iter': 1.9749, 'accuracy': 1.0}
val: {'epoch': 54, 'loss': 1.2461, 'lr': 0.0042, 'params': 4001855, 'time_iter': 1.2868, 'accuracy': 0.616}
train: {'epoch': 54, 'eta': 89.8353, 'loss': 0.0757, 'lr': 0.0042, 'params': 4001855, 'time_iter': 1.9627, 'accuracy': 1.0}
val: {'epoch': 55, 'loss': 1.2766, 'lr': 0.0041, 'params': 4001855, 'time_iter': 1.2835, 'accuracy': 0.6}
train: {'epoch': 55, 'eta': 87.813, 'loss': 0.0739, 'lr': 0.0041, 'params': 4001855, 'time_iter': 1.9634, 'accuracy': 1.0}
val: {'epoch': 56, 'loss': 1.308, 'lr': 0.0039, 'params': 4001855, 'time_iter': 1.2829, 'accuracy': 0.588}
train: {'epoch': 56, 'eta': 85.796, 'loss': 0.0721, 'lr': 0.0039, 'params': 4001855, 'time_iter': 1.9676, 'accuracy': 1.0}
val: {'epoch': 57, 'loss': 1.3397, 'lr': 0.0038, 'params': 4001855, 'time_iter': 1.2894, 'accuracy': 0.586}
train: {'epoch': 57, 'eta': 83.7791, 'loss': 0.0705, 'lr': 0.0038, 'params': 4001855, 'time_iter': 1.9654, 'accuracy': 1.0}
val: {'epoch': 58, 'loss': 1.3706, 'lr': 0.0036, 'params': 4001855, 'time_iter': 1.2829, 'accuracy': 0.578}
train: {'epoch': 58, 'eta': 81.7671, 'loss': 0.069, 'lr': 0.0036, 'params': 4001855, 'time_iter': 1.9699, 'accuracy': 1.0}
val: {'epoch': 59, 'loss': 1.4005, 'lr': 0.0035, 'params': 4001855, 'time_iter': 1.2852, 'accuracy': 0.576}
train: {'epoch': 59, 'eta': 79.7523, 'loss': 0.0676, 'lr': 0.0035, 'params': 4001855, 'time_iter': 1.9636, 'accuracy': 1.0}
val: {'epoch': 60, 'loss': 1.4289, 'lr': 0.0033, 'params': 4001855, 'time_iter': 1.298, 'accuracy': 0.57}
train: {'epoch': 60, 'eta': 77.7416, 'loss': 0.0663, 'lr': 0.0033, 'params': 4001855, 'time_iter': 1.9674, 'accuracy': 1.0}
val: {'epoch': 61, 'loss': 1.4542, 'lr': 0.0032, 'params': 4001855, 'time_iter': 1.2803, 'accuracy': 0.566}
train: {'epoch': 61, 'eta': 75.7356, 'loss': 0.0652, 'lr': 0.0032, 'params': 4001855, 'time_iter': 1.9728, 'accuracy': 1.0}
val: {'epoch': 62, 'loss': 1.476, 'lr': 0.003, 'params': 4001855, 'time_iter': 1.288, 'accuracy': 0.558}
train: {'epoch': 62, 'eta': 73.7278, 'loss': 0.0643, 'lr': 0.003, 'params': 4001855, 'time_iter': 1.9678, 'accuracy': 1.0}
val: {'epoch': 63, 'loss': 1.4947, 'lr': 0.0029, 'params': 4001855, 'time_iter': 1.2921, 'accuracy': 0.548}
train: {'epoch': 63, 'eta': 71.7219, 'loss': 0.0633, 'lr': 0.0029, 'params': 4001855, 'time_iter': 1.9692, 'accuracy': 1.0}
val: {'epoch': 64, 'loss': 1.5108, 'lr': 0.0027, 'params': 4001855, 'time_iter': 1.2931, 'accuracy': 0.546}
train: {'epoch': 64, 'eta': 69.7211, 'loss': 0.0625, 'lr': 0.0027, 'params': 4001855, 'time_iter': 1.9764, 'accuracy': 1.0}
val: {'epoch': 65, 'loss': 1.524, 'lr': 0.0026, 'params': 4001855, 'time_iter': 1.2922, 'accuracy': 0.546}
train: {'epoch': 65, 'eta': 67.7169, 'loss': 0.0617, 'lr': 0.0026, 'params': 4001855, 'time_iter': 1.9684, 'accuracy': 1.0}
val: {'epoch': 66, 'loss': 1.5343, 'lr': 0.0025, 'params': 4001855, 'time_iter': 1.2853, 'accuracy': 0.54}
train: {'epoch': 66, 'eta': 65.7137, 'loss': 0.061, 'lr': 0.0025, 'params': 4001855, 'time_iter': 1.9682, 'accuracy': 1.0}
val: {'epoch': 67, 'loss': 1.5425, 'lr': 0.0023, 'params': 4001855, 'time_iter': 1.288, 'accuracy': 0.536}
train: {'epoch': 67, 'eta': 63.713, 'loss': 0.0603, 'lr': 0.0023, 'params': 4001855, 'time_iter': 1.9715, 'accuracy': 1.0}
val: {'epoch': 68, 'loss': 1.5486, 'lr': 0.0022, 'params': 4001855, 'time_iter': 1.2867, 'accuracy': 0.534}
train: {'epoch': 68, 'eta': 61.712, 'loss': 0.0597, 'lr': 0.0022, 'params': 4001855, 'time_iter': 1.9688, 'accuracy': 1.0}
val: {'epoch': 69, 'loss': 1.553, 'lr': 0.0021, 'params': 4001855, 'time_iter': 1.2824, 'accuracy': 0.532}
train: {'epoch': 69, 'eta': 59.7133, 'loss': 0.0592, 'lr': 0.0021, 'params': 4001855, 'time_iter': 1.972, 'accuracy': 1.0}
val: {'epoch': 70, 'loss': 1.556, 'lr': 0.0019, 'params': 4001855, 'time_iter': 1.2918, 'accuracy': 0.532}
train: {'epoch': 70, 'eta': 57.7163, 'loss': 0.0587, 'lr': 0.0019, 'params': 4001855, 'time_iter': 1.9744, 'accuracy': 1.0}
val: {'epoch': 71, 'loss': 1.5579, 'lr': 0.0018, 'params': 4001855, 'time_iter': 1.2887, 'accuracy': 0.534}
train: {'epoch': 71, 'eta': 55.7214, 'loss': 0.0583, 'lr': 0.0018, 'params': 4001855, 'time_iter': 1.9782, 'accuracy': 1.0}
val: {'epoch': 72, 'loss': 1.5584, 'lr': 0.0017, 'params': 4001855, 'time_iter': 1.2892, 'accuracy': 0.534}
train: {'epoch': 72, 'eta': 53.7266, 'loss': 0.0578, 'lr': 0.0017, 'params': 4001855, 'time_iter': 1.9772, 'accuracy': 1.0}
val: {'epoch': 73, 'loss': 1.5572, 'lr': 0.0016, 'params': 4001855, 'time_iter': 1.2933, 'accuracy': 0.536}
train: {'epoch': 73, 'eta': 51.7533, 'loss': 0.0575, 'lr': 0.0016, 'params': 4001855, 'time_iter': 2.0371, 'accuracy': 1.0}
val: {'epoch': 74, 'loss': 1.5536, 'lr': 0.0015, 'params': 4001855, 'time_iter': 1.2857, 'accuracy': 0.536}
train: {'epoch': 74, 'eta': 49.7583, 'loss': 0.0571, 'lr': 0.0015, 'params': 4001855, 'time_iter': 1.9769, 'accuracy': 1.0}
val: {'epoch': 75, 'loss': 1.5469, 'lr': 0.0014, 'params': 4001855, 'time_iter': 1.2849, 'accuracy': 0.536}
train: {'epoch': 75, 'eta': 47.763, 'loss': 0.0568, 'lr': 0.0014, 'params': 4001855, 'time_iter': 1.9749, 'accuracy': 1.0}
val: {'epoch': 76, 'loss': 1.5373, 'lr': 0.0012, 'params': 4001855, 'time_iter': 1.2964, 'accuracy': 0.536}
train: {'epoch': 76, 'eta': 45.7662, 'loss': 0.0565, 'lr': 0.0012, 'params': 4001855, 'time_iter': 1.9677, 'accuracy': 1.0}
val: {'epoch': 77, 'loss': 1.5246, 'lr': 0.0011, 'params': 4001855, 'time_iter': 1.2873, 'accuracy': 0.544}
train: {'epoch': 77, 'eta': 43.7729, 'loss': 0.0562, 'lr': 0.0011, 'params': 4001855, 'time_iter': 1.9776, 'accuracy': 1.0}
val: {'epoch': 78, 'loss': 1.5098, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.286, 'accuracy': 0.55}
train: {'epoch': 78, 'eta': 41.7777, 'loss': 0.056, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.9686, 'accuracy': 1.0}
val: {'epoch': 79, 'loss': 1.4937, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.2834, 'accuracy': 0.554}
train: {'epoch': 79, 'eta': 39.7833, 'loss': 0.0557, 'lr': 0.001, 'params': 4001855, 'time_iter': 1.9697, 'accuracy': 1.0}
val: {'epoch': 80, 'loss': 1.4767, 'lr': 0.0009, 'params': 4001855, 'time_iter': 1.2817, 'accuracy': 0.558}
train: {'epoch': 80, 'eta': 37.7887, 'loss': 0.0555, 'lr': 0.0009, 'params': 4001855, 'time_iter': 1.966, 'accuracy': 1.0}
val: {'epoch': 81, 'loss': 1.4588, 'lr': 0.0008, 'params': 4001855, 'time_iter': 1.2841, 'accuracy': 0.566}
train: {'epoch': 81, 'eta': 35.7951, 'loss': 0.0554, 'lr': 0.0008, 'params': 4001855, 'time_iter': 1.9673, 'accuracy': 1.0}
val: {'epoch': 82, 'loss': 1.4394, 'lr': 0.0007, 'params': 4001855, 'time_iter': 1.2868, 'accuracy': 0.57}
train: {'epoch': 82, 'eta': 33.8042, 'loss': 0.0552, 'lr': 0.0007, 'params': 4001855, 'time_iter': 1.9776, 'accuracy': 1.0}
val: {'epoch': 83, 'loss': 1.4185, 'lr': 0.0006, 'params': 4001855, 'time_iter': 1.2817, 'accuracy': 0.578}
train: {'epoch': 83, 'eta': 31.8115, 'loss': 0.055, 'lr': 0.0006, 'params': 4001855, 'time_iter': 1.9662, 'accuracy': 1.0}
val: {'epoch': 84, 'loss': 1.3963, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.285, 'accuracy': 0.582}
train: {'epoch': 84, 'eta': 29.8195, 'loss': 0.0549, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 1.0}
val: {'epoch': 85, 'loss': 1.3726, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.2808, 'accuracy': 0.59}
train: {'epoch': 85, 'eta': 27.8268, 'loss': 0.0548, 'lr': 0.0005, 'params': 4001855, 'time_iter': 1.9593, 'accuracy': 1.0}
val: {'epoch': 86, 'loss': 1.3476, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.2921, 'accuracy': 0.594}
train: {'epoch': 86, 'eta': 25.8363, 'loss': 0.0547, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.9682, 'accuracy': 1.0}
val: {'epoch': 87, 'loss': 1.3215, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.2986, 'accuracy': 0.602}
train: {'epoch': 87, 'eta': 23.8476, 'loss': 0.0546, 'lr': 0.0004, 'params': 4001855, 'time_iter': 1.9781, 'accuracy': 1.0}
val: {'epoch': 88, 'loss': 1.2948, 'lr': 0.0003, 'params': 4001855, 'time_iter': 1.2843, 'accuracy': 0.614}
train: {'epoch': 88, 'eta': 21.8575, 'loss': 0.0545, 'lr': 0.0003, 'params': 4001855, 'time_iter': 1.9642, 'accuracy': 1.0}
val: {'epoch': 89, 'loss': 1.2677, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.2895, 'accuracy': 0.632}
train: {'epoch': 89, 'eta': 19.8684, 'loss': 0.0545, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9688, 'accuracy': 1.0}
val: {'epoch': 90, 'loss': 1.2414, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.289, 'accuracy': 0.64}
train: {'epoch': 90, 'eta': 17.8795, 'loss': 0.0544, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9661, 'accuracy': 1.0}
val: {'epoch': 91, 'loss': 1.217, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.2906, 'accuracy': 0.66}
train: {'epoch': 91, 'eta': 15.8913, 'loss': 0.0544, 'lr': 0.0002, 'params': 4001855, 'time_iter': 1.9677, 'accuracy': 1.0}
val: {'epoch': 92, 'loss': 1.195, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2846, 'accuracy': 0.662}
train: {'epoch': 92, 'eta': 13.9034, 'loss': 0.0543, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9665, 'accuracy': 1.0}
val: {'epoch': 93, 'loss': 1.1752, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2864, 'accuracy': 0.672}
train: {'epoch': 93, 'eta': 11.9166, 'loss': 0.0543, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9773, 'accuracy': 1.0}
val: {'epoch': 94, 'loss': 1.1574, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.2837, 'accuracy': 0.674}
train: {'epoch': 94, 'eta': 9.9296, 'loss': 0.0543, 'lr': 0.0001, 'params': 4001855, 'time_iter': 1.9695, 'accuracy': 1.0}
val: {'epoch': 95, 'loss': 1.1411, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2817, 'accuracy': 0.678}
train: {'epoch': 95, 'eta': 7.943, 'loss': 0.0543, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9699, 'accuracy': 1.0}
val: {'epoch': 96, 'loss': 1.1261, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2839, 'accuracy': 0.676}
train: {'epoch': 96, 'eta': 5.9569, 'loss': 0.0543, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9753, 'accuracy': 1.0}
val: {'epoch': 97, 'loss': 1.1125, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2829, 'accuracy': 0.676}
train: {'epoch': 97, 'eta': 3.971, 'loss': 0.0543, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9708, 'accuracy': 1.0}
val: {'epoch': 98, 'loss': 1.1006, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.2813, 'accuracy': 0.682}
train: {'epoch': 98, 'eta': 1.9853, 'loss': 0.0543, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9612, 'accuracy': 1.0}
val: {'epoch': 99, 'loss': 1.0903, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.287, 'accuracy': 0.69}
train: {'epoch': 99, 'eta': 0.0, 'loss': 0.0543, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.9732, 'accuracy': 1.0}
test: {'epoch': 100, 'loss': 1.044, 'lr': 0.0, 'params': 4001855, 'time_iter': 1.164, 'accuracy': 0.695}
Results aggregated across runs saved in my_results/Cora_D_10MP/agg
