GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k6_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k7_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k8_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k9_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k10_t9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 10
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/delay_GCN_10_layer
params: 5130957
print: both
round: 4
run_dir: my_results/delay_GCN_10_layer/2
seed: 3
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 5130957
val: {'epoch': 0, 'loss': 1.2243, 'lr': 0.01, 'params': 5130957, 'time_iter': 1.3133, 'accuracy': 0.0156, 'average_precision': 0.0156, 'precision': 0.0156, 'recall': 1.0, 'f1': 0.0308, 'auc': 0.7063}
val: {'epoch': 0, 'loss': 0.1482, 'lr': 0.0099, 'params': 5130957, 'time_iter': 16.2172, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3625}
train: {'epoch': 0, 'eta': 643056.7791, 'loss': 0.2174, 'lr': 0.0099, 'params': 5130957, 'time_iter': 131.1825, 'accuracy': 0.958, 'average_precision': 0.04, 'precision': 0.1429, 'recall': 0.0244, 'f1': 0.0416, 'auc': 0.5099}
val: {'epoch': 1, 'loss': 0.1124, 'lr': 0.0098, 'params': 5130957, 'time_iter': 16.2746, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.526}
train: {'epoch': 1, 'eta': 606263.8967, 'loss': 0.1689, 'lr': 0.0098, 'params': 5130957, 'time_iter': 129.913, 'accuracy': 0.9626, 'average_precision': 0.0536, 'precision': 0.5, 'recall': 0.0349, 'f1': 0.0653, 'auc': 0.5787}
val: {'epoch': 2, 'loss': 0.1035, 'lr': 0.0095, 'params': 5130957, 'time_iter': 16.2932, 'accuracy': 0.981, 'average_precision': 0.0626, 'precision': 0.7143, 'recall': 0.0617, 'f1': 0.1136, 'auc': 0.6051}
train: {'epoch': 2, 'eta': 571728.2362, 'loss': 0.155, 'lr': 0.0095, 'params': 5130957, 'time_iter': 129.9634, 'accuracy': 0.963, 'average_precision': 0.0648, 'precision': 0.5727, 'recall': 0.0511, 'f1': 0.0939, 'auc': 0.6411}
val: {'epoch': 3, 'loss': 0.1342, 'lr': 0.009, 'params': 5130957, 'time_iter': 16.3558, 'accuracy': 0.9699, 'average_precision': 0.0504, 'precision': 0.1972, 'recall': 0.1728, 'f1': 0.1842, 'auc': 0.6834}
train: {'epoch': 3, 'eta': 538357.7052, 'loss': 0.1494, 'lr': 0.009, 'params': 5130957, 'time_iter': 130.6055, 'accuracy': 0.9632, 'average_precision': 0.0727, 'precision': 0.5797, 'recall': 0.0649, 'f1': 0.1168, 'auc': 0.671}
val: {'epoch': 4, 'loss': 0.104, 'lr': 0.0085, 'params': 5130957, 'time_iter': 16.3966, 'accuracy': 0.9813, 'average_precision': 0.0738, 'precision': 0.75, 'recall': 0.0741, 'f1': 0.1348, 'auc': 0.6619}
train: {'epoch': 4, 'eta': 504630.5255, 'loss': 0.1472, 'lr': 0.0085, 'params': 5130957, 'time_iter': 130.313, 'accuracy': 0.9636, 'average_precision': 0.0801, 'precision': 0.6149, 'recall': 0.0739, 'f1': 0.1319, 'auc': 0.6815}
val: {'epoch': 5, 'loss': 0.114, 'lr': 0.0079, 'params': 5130957, 'time_iter': 16.3413, 'accuracy': 0.9815, 'average_precision': 0.1215, 'precision': 0.6087, 'recall': 0.1728, 'f1': 0.2692, 'auc': 0.7095}
train: {'epoch': 5, 'eta': 470751.5448, 'loss': 0.1456, 'lr': 0.0079, 'params': 5130957, 'time_iter': 130.0019, 'accuracy': 0.9639, 'average_precision': 0.0858, 'precision': 0.651, 'recall': 0.0787, 'f1': 0.1405, 'auc': 0.6885}
val: {'epoch': 6, 'loss': 0.0954, 'lr': 0.0073, 'params': 5130957, 'time_iter': 16.5318, 'accuracy': 0.9813, 'average_precision': 0.1, 'precision': 0.6111, 'recall': 0.1358, 'f1': 0.2222, 'auc': 0.7317}
train: {'epoch': 6, 'eta': 437138.504, 'loss': 0.1418, 'lr': 0.0073, 'params': 5130957, 'time_iter': 130.3551, 'accuracy': 0.9637, 'average_precision': 0.0859, 'precision': 0.6118, 'recall': 0.0844, 'f1': 0.1484, 'auc': 0.713}
val: {'epoch': 7, 'loss': 0.105, 'lr': 0.0065, 'params': 5130957, 'time_iter': 16.3452, 'accuracy': 0.9791, 'average_precision': 0.0723, 'precision': 0.4074, 'recall': 0.1358, 'f1': 0.2037, 'auc': 0.6872}
train: {'epoch': 7, 'eta': 403197.5246, 'loss': 0.142, 'lr': 0.0065, 'params': 5130957, 'time_iter': 129.5197, 'accuracy': 0.9639, 'average_precision': 0.0875, 'precision': 0.6358, 'recall': 0.0836, 'f1': 0.1478, 'auc': 0.7139}
val: {'epoch': 8, 'loss': 0.0911, 'lr': 0.0058, 'params': 5130957, 'time_iter': 16.3831, 'accuracy': 0.9813, 'average_precision': 0.0699, 'precision': 0.8333, 'recall': 0.0617, 'f1': 0.1149, 'auc': 0.6467}
train: {'epoch': 8, 'eta': 369508.3787, 'loss': 0.1398, 'lr': 0.0058, 'params': 5130957, 'time_iter': 129.9484, 'accuracy': 0.9644, 'average_precision': 0.1014, 'precision': 0.658, 'recall': 0.1031, 'f1': 0.1782, 'auc': 0.7237}
val: {'epoch': 9, 'loss': 0.0912, 'lr': 0.005, 'params': 5130957, 'time_iter': 16.3277, 'accuracy': 0.9805, 'average_precision': 0.0318, 'precision': 1.0, 'recall': 0.0123, 'f1': 0.0244, 'auc': 0.6965}
train: {'epoch': 9, 'eta': 335928.5757, 'loss': 0.1384, 'lr': 0.005, 'params': 5130957, 'time_iter': 130.2463, 'accuracy': 0.9641, 'average_precision': 0.0985, 'precision': 0.6202, 'recall': 0.1047, 'f1': 0.1792, 'auc': 0.7352}
val: {'epoch': 10, 'loss': 0.0895, 'lr': 0.0042, 'params': 5130957, 'time_iter': 16.3033, 'accuracy': 0.9813, 'average_precision': 0.0699, 'precision': 0.8333, 'recall': 0.0617, 'f1': 0.1149, 'auc': 0.6789}
train: {'epoch': 10, 'eta': 302369.6769, 'loss': 0.1375, 'lr': 0.0042, 'params': 5130957, 'time_iter': 130.3657, 'accuracy': 0.9641, 'average_precision': 0.097, 'precision': 0.634, 'recall': 0.0998, 'f1': 0.1725, 'auc': 0.7329}
val: {'epoch': 11, 'loss': 0.0901, 'lr': 0.0035, 'params': 5130957, 'time_iter': 16.2613, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6683}
train: {'epoch': 11, 'eta': 268827.3015, 'loss': 0.135, 'lr': 0.0035, 'params': 5130957, 'time_iter': 130.5349, 'accuracy': 0.9643, 'average_precision': 0.1014, 'precision': 0.6346, 'recall': 0.1071, 'f1': 0.1833, 'auc': 0.7498}
val: {'epoch': 12, 'loss': 0.0918, 'lr': 0.0027, 'params': 5130957, 'time_iter': 16.3197, 'accuracy': 0.9801, 'average_precision': 0.1531, 'precision': 0.4894, 'recall': 0.284, 'f1': 0.3594, 'auc': 0.7562}
train: {'epoch': 12, 'eta': 235231.2953, 'loss': 0.1335, 'lr': 0.0027, 'params': 5130957, 'time_iter': 130.2991, 'accuracy': 0.965, 'average_precision': 0.117, 'precision': 0.6864, 'recall': 0.1226, 'f1': 0.208, 'auc': 0.7499}
val: {'epoch': 13, 'loss': 0.0833, 'lr': 0.0021, 'params': 5130957, 'time_iter': 16.2684, 'accuracy': 0.981, 'average_precision': 0.0842, 'precision': 0.6, 'recall': 0.1111, 'f1': 0.1875, 'auc': 0.7381}
train: {'epoch': 13, 'eta': 201683.7912, 'loss': 0.134, 'lr': 0.0021, 'params': 5130957, 'time_iter': 130.7651, 'accuracy': 0.9648, 'average_precision': 0.1184, 'precision': 0.6494, 'recall': 0.1323, 'f1': 0.2198, 'auc': 0.7596}
val: {'epoch': 14, 'loss': 0.0829, 'lr': 0.0015, 'params': 5130957, 'time_iter': 16.3818, 'accuracy': 0.981, 'average_precision': 0.1014, 'precision': 0.5714, 'recall': 0.1481, 'f1': 0.2353, 'auc': 0.7569}
train: {'epoch': 14, 'eta': 168079.8851, 'loss': 0.1293, 'lr': 0.0015, 'params': 5130957, 'time_iter': 130.4037, 'accuracy': 0.966, 'average_precision': 0.1364, 'precision': 0.7425, 'recall': 0.1404, 'f1': 0.2362, 'auc': 0.7756}
val: {'epoch': 15, 'loss': 0.0996, 'lr': 0.001, 'params': 5130957, 'time_iter': 16.3724, 'accuracy': 0.9803, 'average_precision': 0.0256, 'precision': 0.5, 'recall': 0.0123, 'f1': 0.0241, 'auc': 0.608}
train: {'epoch': 15, 'eta': 134436.5196, 'loss': 0.1267, 'lr': 0.001, 'params': 5130957, 'time_iter': 129.8699, 'accuracy': 0.9659, 'average_precision': 0.1392, 'precision': 0.7041, 'recall': 0.1526, 'f1': 0.2508, 'auc': 0.7903}
val: {'epoch': 16, 'loss': 0.0869, 'lr': 0.0005, 'params': 5130957, 'time_iter': 16.3274, 'accuracy': 0.9813, 'average_precision': 0.1229, 'precision': 0.5769, 'recall': 0.1852, 'f1': 0.2804, 'auc': 0.7366}
train: {'epoch': 16, 'eta': 100817.9255, 'loss': 0.1255, 'lr': 0.0005, 'params': 5130957, 'time_iter': 130.0601, 'accuracy': 0.966, 'average_precision': 0.1425, 'precision': 0.7154, 'recall': 0.155, 'f1': 0.2548, 'auc': 0.7919}
val: {'epoch': 17, 'loss': 0.079, 'lr': 0.0002, 'params': 5130957, 'time_iter': 16.3273, 'accuracy': 0.9813, 'average_precision': 0.0889, 'precision': 0.6429, 'recall': 0.1111, 'f1': 0.1895, 'auc': 0.7364}
train: {'epoch': 17, 'eta': 67193.3664, 'loss': 0.1229, 'lr': 0.0002, 'params': 5130957, 'time_iter': 129.6074, 'accuracy': 0.967, 'average_precision': 0.1634, 'precision': 0.7491, 'recall': 0.1769, 'f1': 0.2863, 'auc': 0.8024}
val: {'epoch': 18, 'loss': 0.0814, 'lr': 0.0001, 'params': 5130957, 'time_iter': 16.346, 'accuracy': 0.982, 'average_precision': 0.1588, 'precision': 0.6129, 'recall': 0.2346, 'f1': 0.3393, 'auc': 0.7469}
train: {'epoch': 18, 'eta': 33595.2051, 'loss': 0.1209, 'lr': 0.0001, 'params': 5130957, 'time_iter': 130.1108, 'accuracy': 0.9671, 'average_precision': 0.1672, 'precision': 0.7418, 'recall': 0.1843, 'f1': 0.2952, 'auc': 0.8053}
val: {'epoch': 19, 'loss': 0.0817, 'lr': 0.0, 'params': 5130957, 'time_iter': 16.4269, 'accuracy': 0.982, 'average_precision': 0.1588, 'precision': 0.6129, 'recall': 0.2346, 'f1': 0.3393, 'auc': 0.7499}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1191, 'lr': 0.0, 'params': 5130957, 'time_iter': 130.2073, 'accuracy': 0.9673, 'average_precision': 0.1733, 'precision': 0.7468, 'recall': 0.1916, 'f1': 0.3049, 'auc': 0.8142}
test: {'epoch': 20, 'loss': 0.1182, 'lr': 0.0, 'params': 5130957, 'time_iter': 12.6864, 'accuracy': 0.9699, 'average_precision': 0.1172, 'precision': 0.5882, 'recall': 0.1538, 'f1': 0.2439, 'auc': 0.7463}
Results aggregated across runs saved in my_results/delay_GCN_10_layer/agg
