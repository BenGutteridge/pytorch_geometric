GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 2
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 2
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/delay_GCN_2_layer
print: both
round: 4
run_dir: my_results/delay_GCN_2_layer/0
seed: 1
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 419705
val: {'epoch': 0, 'loss': 0.4864, 'lr': 0.01, 'params': 419705, 'time_iter': 1.005, 'accuracy': 0.9844, 'average_precision': 0.0156, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.2113}
val: {'epoch': 0, 'loss': 0.2145, 'lr': 0.0099, 'params': 419705, 'time_iter': 2.0485, 'accuracy': 0.9587, 'average_precision': 0.0419, 'precision': 0.1322, 'recall': 0.1975, 'f1': 0.1584, 'auc': 0.6399}
train: {'epoch': 0, 'eta': 88916.2337, 'loss': 0.205, 'lr': 0.0099, 'params': 419705, 'time_iter': 18.1388, 'accuracy': 0.9622, 'average_precision': 0.0413, 'precision': 0.3571, 'recall': 0.0122, 'f1': 0.0235, 'auc': 0.5044}
val: {'epoch': 1, 'loss': 0.1166, 'lr': 0.0098, 'params': 419705, 'time_iter': 1.8599, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6465}
train: {'epoch': 1, 'eta': 80589.1587, 'loss': 0.1713, 'lr': 0.0098, 'params': 419705, 'time_iter': 16.568, 'accuracy': 0.9633, 'average_precision': 0.0606, 'precision': 0.6716, 'recall': 0.0365, 'f1': 0.0693, 'auc': 0.5631}
val: {'epoch': 2, 'loss': 0.0968, 'lr': 0.0095, 'params': 419705, 'time_iter': 1.8726, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6372}
train: {'epoch': 2, 'eta': 74966.7854, 'loss': 0.1575, 'lr': 0.0095, 'params': 419705, 'time_iter': 16.5701, 'accuracy': 0.963, 'average_precision': 0.0584, 'precision': 0.5974, 'recall': 0.0373, 'f1': 0.0703, 'auc': 0.6306}
val: {'epoch': 3, 'loss': 0.0944, 'lr': 0.009, 'params': 419705, 'time_iter': 1.8614, 'accuracy': 0.981, 'average_precision': 0.056, 'precision': 1.0, 'recall': 0.037, 'f1': 0.0714, 'auc': 0.5729}
train: {'epoch': 3, 'eta': 70076.569, 'loss': 0.1479, 'lr': 0.009, 'params': 419705, 'time_iter': 16.6268, 'accuracy': 0.9635, 'average_precision': 0.0729, 'precision': 0.6271, 'recall': 0.0601, 'f1': 0.1096, 'auc': 0.6821}
val: {'epoch': 4, 'loss': 0.089, 'lr': 0.0085, 'params': 419705, 'time_iter': 1.8734, 'accuracy': 0.9818, 'average_precision': 0.0936, 'precision': 0.875, 'recall': 0.0864, 'f1': 0.1573, 'auc': 0.6674}
train: {'epoch': 4, 'eta': 65322.4129, 'loss': 0.1464, 'lr': 0.0085, 'params': 419705, 'time_iter': 16.4922, 'accuracy': 0.9637, 'average_precision': 0.0766, 'precision': 0.6638, 'recall': 0.0625, 'f1': 0.1142, 'auc': 0.6856}
val: {'epoch': 5, 'loss': 0.1641, 'lr': 0.0079, 'params': 419705, 'time_iter': 1.8636, 'accuracy': 0.9672, 'average_precision': 0.1144, 'precision': 0.2672, 'recall': 0.3827, 'f1': 0.3147, 'auc': 0.7356}
train: {'epoch': 5, 'eta': 60758.7182, 'loss': 0.142, 'lr': 0.0079, 'params': 419705, 'time_iter': 16.5322, 'accuracy': 0.9638, 'average_precision': 0.0824, 'precision': 0.6389, 'recall': 0.0747, 'f1': 0.1337, 'auc': 0.722}
val: {'epoch': 6, 'loss': 0.0957, 'lr': 0.0073, 'params': 419705, 'time_iter': 1.8592, 'accuracy': 0.9801, 'average_precision': 0.0701, 'precision': 0.4737, 'recall': 0.1111, 'f1': 0.18, 'auc': 0.7657}
train: {'epoch': 6, 'eta': 56237.6286, 'loss': 0.1427, 'lr': 0.0073, 'params': 419705, 'time_iter': 16.4432, 'accuracy': 0.964, 'average_precision': 0.0882, 'precision': 0.6623, 'recall': 0.0812, 'f1': 0.1446, 'auc': 0.7107}
val: {'epoch': 7, 'loss': 0.0892, 'lr': 0.0065, 'params': 419705, 'time_iter': 1.8602, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6785}
train: {'epoch': 7, 'eta': 51799.2303, 'loss': 0.1463, 'lr': 0.0065, 'params': 419705, 'time_iter': 16.4768, 'accuracy': 0.9636, 'average_precision': 0.0773, 'precision': 0.6222, 'recall': 0.0682, 'f1': 0.1229, 'auc': 0.6957}
val: {'epoch': 8, 'loss': 0.0839, 'lr': 0.0058, 'params': 419705, 'time_iter': 1.8661, 'accuracy': 0.9818, 'average_precision': 0.0936, 'precision': 0.875, 'recall': 0.0864, 'f1': 0.1573, 'auc': 0.7353}
train: {'epoch': 8, 'eta': 47441.6167, 'loss': 0.1435, 'lr': 0.0058, 'params': 419705, 'time_iter': 16.601, 'accuracy': 0.9636, 'average_precision': 0.0786, 'precision': 0.6343, 'recall': 0.069, 'f1': 0.1245, 'auc': 0.7141}
val: {'epoch': 9, 'loss': 0.0945, 'lr': 0.005, 'params': 419705, 'time_iter': 1.8588, 'accuracy': 0.981, 'average_precision': 0.1014, 'precision': 0.5714, 'recall': 0.1481, 'f1': 0.2353, 'auc': 0.7601}
train: {'epoch': 9, 'eta': 43109.3166, 'loss': 0.1408, 'lr': 0.005, 'params': 419705, 'time_iter': 16.6413, 'accuracy': 0.9644, 'average_precision': 0.0968, 'precision': 0.6786, 'recall': 0.0925, 'f1': 0.1629, 'auc': 0.7234}
val: {'epoch': 10, 'loss': 0.095, 'lr': 0.0042, 'params': 419705, 'time_iter': 1.8703, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6676}
train: {'epoch': 10, 'eta': 38770.9518, 'loss': 0.1392, 'lr': 0.0042, 'params': 419705, 'time_iter': 16.5791, 'accuracy': 0.9644, 'average_precision': 0.0991, 'precision': 0.6704, 'recall': 0.0974, 'f1': 0.1701, 'auc': 0.7339}
val: {'epoch': 11, 'loss': 0.0928, 'lr': 0.0035, 'params': 419705, 'time_iter': 1.8687, 'accuracy': 0.9823, 'average_precision': 0.1423, 'precision': 0.6818, 'recall': 0.1852, 'f1': 0.2913, 'auc': 0.7582}
train: {'epoch': 11, 'eta': 34423.3305, 'loss': 0.1366, 'lr': 0.0035, 'params': 419705, 'time_iter': 16.4662, 'accuracy': 0.9647, 'average_precision': 0.1077, 'precision': 0.6837, 'recall': 0.1088, 'f1': 0.1877, 'auc': 0.7441}
val: {'epoch': 12, 'loss': 0.0888, 'lr': 0.0027, 'params': 419705, 'time_iter': 1.8661, 'accuracy': 0.981, 'average_precision': 0.0785, 'precision': 0.6154, 'recall': 0.0988, 'f1': 0.1702, 'auc': 0.758}
train: {'epoch': 12, 'eta': 30138.6351, 'loss': 0.1343, 'lr': 0.0027, 'params': 419705, 'time_iter': 16.8091, 'accuracy': 0.9644, 'average_precision': 0.1011, 'precision': 0.6546, 'recall': 0.1031, 'f1': 0.1781, 'auc': 0.7584}
val: {'epoch': 13, 'loss': 0.0809, 'lr': 0.0021, 'params': 419705, 'time_iter': 1.8726, 'accuracy': 0.982, 'average_precision': 0.1084, 'precision': 0.8182, 'recall': 0.1111, 'f1': 0.1957, 'auc': 0.7596}
train: {'epoch': 13, 'eta': 25825.2194, 'loss': 0.1333, 'lr': 0.0021, 'params': 419705, 'time_iter': 16.6166, 'accuracy': 0.9647, 'average_precision': 0.1054, 'precision': 0.6862, 'recall': 0.1047, 'f1': 0.1817, 'auc': 0.7631}
val: {'epoch': 14, 'loss': 0.085, 'lr': 0.0015, 'params': 419705, 'time_iter': 1.8761, 'accuracy': 0.9818, 'average_precision': 0.1054, 'precision': 0.7143, 'recall': 0.1235, 'f1': 0.2105, 'auc': 0.7765}
train: {'epoch': 14, 'eta': 21523.9037, 'loss': 0.1312, 'lr': 0.0015, 'params': 419705, 'time_iter': 16.7165, 'accuracy': 0.9646, 'average_precision': 0.1075, 'precision': 0.6588, 'recall': 0.1128, 'f1': 0.1927, 'auc': 0.7711}
val: {'epoch': 15, 'loss': 0.0813, 'lr': 0.001, 'params': 419705, 'time_iter': 1.8774, 'accuracy': 0.9823, 'average_precision': 0.1165, 'precision': 1.0, 'recall': 0.0988, 'f1': 0.1798, 'auc': 0.7479}
train: {'epoch': 15, 'eta': 17219.1562, 'loss': 0.1294, 'lr': 0.001, 'params': 419705, 'time_iter': 16.6857, 'accuracy': 0.9649, 'average_precision': 0.1145, 'precision': 0.6742, 'recall': 0.1209, 'f1': 0.2051, 'auc': 0.7782}
val: {'epoch': 16, 'loss': 0.0832, 'lr': 0.0005, 'params': 419705, 'time_iter': 1.8813, 'accuracy': 0.9813, 'average_precision': 0.1, 'precision': 0.6111, 'recall': 0.1358, 'f1': 0.2222, 'auc': 0.7893}
train: {'epoch': 16, 'eta': 12916.9403, 'loss': 0.1286, 'lr': 0.0005, 'params': 419705, 'time_iter': 16.7417, 'accuracy': 0.9654, 'average_precision': 0.1262, 'precision': 0.7039, 'recall': 0.1331, 'f1': 0.2239, 'auc': 0.7817}
val: {'epoch': 17, 'loss': 0.0798, 'lr': 0.0002, 'params': 419705, 'time_iter': 1.8796, 'accuracy': 0.982, 'average_precision': 0.1084, 'precision': 0.8182, 'recall': 0.1111, 'f1': 0.1957, 'auc': 0.7675}
train: {'epoch': 17, 'eta': 8602.4646, 'loss': 0.1272, 'lr': 0.0002, 'params': 419705, 'time_iter': 16.3806, 'accuracy': 0.9653, 'average_precision': 0.1249, 'precision': 0.6904, 'recall': 0.1339, 'f1': 0.2243, 'auc': 0.7874}
val: {'epoch': 18, 'loss': 0.0816, 'lr': 0.0001, 'params': 419705, 'time_iter': 1.8618, 'accuracy': 0.9805, 'average_precision': 0.0822, 'precision': 0.5263, 'recall': 0.1235, 'f1': 0.2, 'auc': 0.7835}
train: {'epoch': 18, 'eta': 4299.2997, 'loss': 0.1259, 'lr': 0.0001, 'params': 419705, 'time_iter': 16.5291, 'accuracy': 0.9658, 'average_precision': 0.1325, 'precision': 0.7389, 'recall': 0.1356, 'f1': 0.2291, 'auc': 0.7937}
val: {'epoch': 19, 'loss': 0.0817, 'lr': 0.0, 'params': 419705, 'time_iter': 1.8803, 'accuracy': 0.9813, 'average_precision': 0.1057, 'precision': 0.6, 'recall': 0.1481, 'f1': 0.2376, 'auc': 0.7814}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1254, 'lr': 0.0, 'params': 419705, 'time_iter': 16.6002, 'accuracy': 0.9659, 'average_precision': 0.1346, 'precision': 0.7371, 'recall': 0.1388, 'f1': 0.2336, 'auc': 0.7971}
test: {'epoch': 20, 'loss': 0.1202, 'lr': 0.0, 'params': 419705, 'time_iter': 1.648, 'accuracy': 0.9713, 'average_precision': 0.1338, 'precision': 0.7308, 'recall': 0.1462, 'f1': 0.2436, 'auc': 0.7386}
