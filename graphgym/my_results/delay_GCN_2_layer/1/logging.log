GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 2
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 2
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/delay_GCN_2_layer
params: 419705
print: both
round: 4
run_dir: my_results/delay_GCN_2_layer/1
seed: 2
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 419705
val: {'epoch': 0, 'loss': 0.5023, 'lr': 0.01, 'params': 419705, 'time_iter': 0.1841, 'accuracy': 0.9844, 'average_precision': 0.0156, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.2639}
val: {'epoch': 0, 'loss': 0.1046, 'lr': 0.0099, 'params': 419705, 'time_iter': 2.145, 'accuracy': 0.9815, 'average_precision': 0.0802, 'precision': 1.0, 'recall': 0.0617, 'f1': 0.1163, 'auc': 0.6247}
train: {'epoch': 0, 'eta': 90752.9715, 'loss': 0.2155, 'lr': 0.0099, 'params': 419705, 'time_iter': 18.5135, 'accuracy': 0.961, 'average_precision': 0.0385, 'precision': 0.1528, 'recall': 0.0089, 'f1': 0.0169, 'auc': 0.5117}
val: {'epoch': 1, 'loss': 0.1522, 'lr': 0.0098, 'params': 419705, 'time_iter': 1.8906, 'accuracy': 0.9757, 'average_precision': 0.088, 'precision': 0.3273, 'recall': 0.2222, 'f1': 0.2647, 'auc': 0.6923}
train: {'epoch': 1, 'eta': 82028.5203, 'loss': 0.1796, 'lr': 0.0098, 'params': 419705, 'time_iter': 16.8132, 'accuracy': 0.9623, 'average_precision': 0.0446, 'precision': 0.4182, 'recall': 0.0187, 'f1': 0.0357, 'auc': 0.5565}
val: {'epoch': 2, 'loss': 0.0952, 'lr': 0.0095, 'params': 419705, 'time_iter': 1.8817, 'accuracy': 0.9815, 'average_precision': 0.0896, 'precision': 0.7273, 'recall': 0.0988, 'f1': 0.1739, 'auc': 0.7095}
train: {'epoch': 2, 'eta': 76022.8659, 'loss': 0.1569, 'lr': 0.0095, 'params': 419705, 'time_iter': 16.6726, 'accuracy': 0.9634, 'average_precision': 0.0695, 'precision': 0.6262, 'recall': 0.0544, 'f1': 0.1001, 'auc': 0.634}
val: {'epoch': 3, 'loss': 0.1023, 'lr': 0.009, 'params': 419705, 'time_iter': 1.8891, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5689}
train: {'epoch': 3, 'eta': 70872.8467, 'loss': 0.1489, 'lr': 0.009, 'params': 419705, 'time_iter': 16.676, 'accuracy': 0.9634, 'average_precision': 0.0705, 'precision': 0.6195, 'recall': 0.0568, 'f1': 0.1041, 'auc': 0.6772}
val: {'epoch': 4, 'loss': 0.3136, 'lr': 0.0085, 'params': 419705, 'time_iter': 1.8819, 'accuracy': 0.9176, 'average_precision': 0.0552, 'precision': 0.1043, 'recall': 0.4198, 'f1': 0.1671, 'auc': 0.7336}
train: {'epoch': 4, 'eta': 66055.4974, 'loss': 0.1454, 'lr': 0.0085, 'params': 419705, 'time_iter': 16.6678, 'accuracy': 0.964, 'average_precision': 0.0832, 'precision': 0.6935, 'recall': 0.0698, 'f1': 0.1268, 'auc': 0.6997}
val: {'epoch': 5, 'loss': 0.0953, 'lr': 0.0079, 'params': 419705, 'time_iter': 1.8977, 'accuracy': 0.9815, 'average_precision': 0.1159, 'precision': 0.619, 'recall': 0.1605, 'f1': 0.2549, 'auc': 0.7406}
train: {'epoch': 5, 'eta': 61513.9799, 'loss': 0.1482, 'lr': 0.0079, 'params': 419705, 'time_iter': 16.8397, 'accuracy': 0.9635, 'average_precision': 0.0782, 'precision': 0.6014, 'recall': 0.0722, 'f1': 0.129, 'auc': 0.6835}
val: {'epoch': 6, 'loss': 0.0872, 'lr': 0.0073, 'params': 419705, 'time_iter': 1.8855, 'accuracy': 0.9818, 'average_precision': 0.0936, 'precision': 0.875, 'recall': 0.0864, 'f1': 0.1573, 'auc': 0.6893}
train: {'epoch': 6, 'eta': 56893.373, 'loss': 0.1423, 'lr': 0.0073, 'params': 419705, 'time_iter': 16.5572, 'accuracy': 0.964, 'average_precision': 0.0851, 'precision': 0.662, 'recall': 0.0763, 'f1': 0.1368, 'auc': 0.7149}
val: {'epoch': 7, 'loss': 0.0838, 'lr': 0.0065, 'params': 419705, 'time_iter': 1.8824, 'accuracy': 0.982, 'average_precision': 0.1055, 'precision': 0.8889, 'recall': 0.0988, 'f1': 0.1778, 'auc': 0.7394}
train: {'epoch': 7, 'eta': 52346.5342, 'loss': 0.1411, 'lr': 0.0065, 'params': 419705, 'time_iter': 16.5225, 'accuracy': 0.9639, 'average_precision': 0.0844, 'precision': 0.6463, 'recall': 0.0771, 'f1': 0.1378, 'auc': 0.7195}
val: {'epoch': 8, 'loss': 0.0967, 'lr': 0.0058, 'params': 419705, 'time_iter': 1.8734, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6386}
train: {'epoch': 8, 'eta': 47819.9861, 'loss': 0.1409, 'lr': 0.0058, 'params': 419705, 'time_iter': 16.3866, 'accuracy': 0.9639, 'average_precision': 0.0875, 'precision': 0.6415, 'recall': 0.0828, 'f1': 0.1467, 'auc': 0.7229}
val: {'epoch': 9, 'loss': 0.0892, 'lr': 0.005, 'params': 419705, 'time_iter': 1.8811, 'accuracy': 0.982, 'average_precision': 0.1214, 'precision': 0.7059, 'recall': 0.1481, 'f1': 0.2449, 'auc': 0.7681}
train: {'epoch': 9, 'eta': 43363.4799, 'loss': 0.1379, 'lr': 0.005, 'params': 419705, 'time_iter': 16.4265, 'accuracy': 0.9643, 'average_precision': 0.0963, 'precision': 0.6629, 'recall': 0.0942, 'f1': 0.1649, 'auc': 0.7362}
val: {'epoch': 10, 'loss': 0.0902, 'lr': 0.0042, 'params': 419705, 'time_iter': 1.8848, 'accuracy': 0.9815, 'average_precision': 0.1159, 'precision': 0.619, 'recall': 0.1605, 'f1': 0.2549, 'auc': 0.746}
train: {'epoch': 10, 'eta': 38965.7555, 'loss': 0.137, 'lr': 0.0042, 'params': 419705, 'time_iter': 16.5168, 'accuracy': 0.9643, 'average_precision': 0.097, 'precision': 0.6648, 'recall': 0.095, 'f1': 0.1662, 'auc': 0.7428}
val: {'epoch': 11, 'loss': 0.086, 'lr': 0.0035, 'params': 419705, 'time_iter': 1.8764, 'accuracy': 0.981, 'average_precision': 0.056, 'precision': 1.0, 'recall': 0.037, 'f1': 0.0714, 'auc': 0.7368}
train: {'epoch': 11, 'eta': 34573.8209, 'loss': 0.1363, 'lr': 0.0035, 'params': 419705, 'time_iter': 16.4183, 'accuracy': 0.9643, 'average_precision': 0.099, 'precision': 0.6595, 'recall': 0.099, 'f1': 0.1722, 'auc': 0.7465}
val: {'epoch': 12, 'loss': 0.0868, 'lr': 0.0027, 'params': 419705, 'time_iter': 1.8757, 'accuracy': 0.9823, 'average_precision': 0.1324, 'precision': 0.7222, 'recall': 0.1605, 'f1': 0.2626, 'auc': 0.7654}
train: {'epoch': 12, 'eta': 30232.9295, 'loss': 0.1352, 'lr': 0.0027, 'params': 419705, 'time_iter': 16.6129, 'accuracy': 0.9643, 'average_precision': 0.098, 'precision': 0.6648, 'recall': 0.0966, 'f1': 0.1687, 'auc': 0.7555}
val: {'epoch': 13, 'loss': 0.085, 'lr': 0.0021, 'params': 419705, 'time_iter': 1.8739, 'accuracy': 0.9823, 'average_precision': 0.1201, 'precision': 0.8333, 'recall': 0.1235, 'f1': 0.2151, 'auc': 0.7124}
train: {'epoch': 13, 'eta': 25890.244, 'loss': 0.1333, 'lr': 0.0021, 'params': 419705, 'time_iter': 16.526, 'accuracy': 0.9645, 'average_precision': 0.1029, 'precision': 0.672, 'recall': 0.1031, 'f1': 0.1787, 'auc': 0.7593}
val: {'epoch': 14, 'loss': 0.0983, 'lr': 0.0015, 'params': 419705, 'time_iter': 1.8826, 'accuracy': 0.9801, 'average_precision': 0.1116, 'precision': 0.4848, 'recall': 0.1975, 'f1': 0.2807, 'auc': 0.7669}
train: {'epoch': 14, 'eta': 21580.6949, 'loss': 0.1318, 'lr': 0.0015, 'params': 419705, 'time_iter': 16.7888, 'accuracy': 0.9651, 'average_precision': 0.1168, 'precision': 0.6981, 'recall': 0.1201, 'f1': 0.205, 'auc': 0.7653}
val: {'epoch': 15, 'loss': 0.0858, 'lr': 0.001, 'params': 419705, 'time_iter': 1.8743, 'accuracy': 0.9823, 'average_precision': 0.1279, 'precision': 0.75, 'recall': 0.1481, 'f1': 0.2474, 'auc': 0.767}
train: {'epoch': 15, 'eta': 17261.7292, 'loss': 0.1311, 'lr': 0.001, 'params': 419705, 'time_iter': 16.6854, 'accuracy': 0.9648, 'average_precision': 0.1124, 'precision': 0.6744, 'recall': 0.1177, 'f1': 0.2004, 'auc': 0.7722}
val: {'epoch': 16, 'loss': 0.0827, 'lr': 0.0005, 'params': 419705, 'time_iter': 1.8731, 'accuracy': 0.982, 'average_precision': 0.1214, 'precision': 0.7059, 'recall': 0.1481, 'f1': 0.2449, 'auc': 0.7519}
train: {'epoch': 16, 'eta': 12936.4219, 'loss': 0.1306, 'lr': 0.0005, 'params': 419705, 'time_iter': 16.5096, 'accuracy': 0.9647, 'average_precision': 0.1117, 'precision': 0.6636, 'recall': 0.1185, 'f1': 0.2011, 'auc': 0.7734}
val: {'epoch': 17, 'loss': 0.0829, 'lr': 0.0002, 'params': 419705, 'time_iter': 1.8696, 'accuracy': 0.982, 'average_precision': 0.1122, 'precision': 0.7692, 'recall': 0.1235, 'f1': 0.2128, 'auc': 0.765}
train: {'epoch': 17, 'eta': 8615.3034, 'loss': 0.1283, 'lr': 0.0002, 'params': 419705, 'time_iter': 16.4005, 'accuracy': 0.9652, 'average_precision': 0.1185, 'precision': 0.6991, 'recall': 0.1226, 'f1': 0.2086, 'auc': 0.7808}
val: {'epoch': 18, 'loss': 0.0816, 'lr': 0.0001, 'params': 419705, 'time_iter': 1.8726, 'accuracy': 0.9818, 'average_precision': 0.1054, 'precision': 0.7143, 'recall': 0.1235, 'f1': 0.2105, 'auc': 0.7625}
train: {'epoch': 18, 'eta': 4304.355, 'loss': 0.1277, 'lr': 0.0001, 'params': 419705, 'time_iter': 16.4535, 'accuracy': 0.9654, 'average_precision': 0.1239, 'precision': 0.7117, 'recall': 0.1282, 'f1': 0.2173, 'auc': 0.7832}
val: {'epoch': 19, 'loss': 0.0816, 'lr': 0.0, 'params': 419705, 'time_iter': 1.8803, 'accuracy': 0.9818, 'average_precision': 0.1054, 'precision': 0.7143, 'recall': 0.1235, 'f1': 0.2105, 'auc': 0.7605}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1269, 'lr': 0.0, 'params': 419705, 'time_iter': 16.4366, 'accuracy': 0.9655, 'average_precision': 0.1243, 'precision': 0.7277, 'recall': 0.1258, 'f1': 0.2145, 'auc': 0.787}
test: {'epoch': 20, 'loss': 0.1145, 'lr': 0.0, 'params': 419705, 'time_iter': 1.7001, 'accuracy': 0.9716, 'average_precision': 0.1381, 'precision': 0.76, 'recall': 0.1462, 'f1': 0.2452, 'auc': 0.7582}
