GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): DelayGNNStage(
      (W_k1_t0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k1_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k2_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k3_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k4_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (W_k5_t4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 5
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: my_gcnconv
  layers_mp: 5
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: delay_gnn
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/delay_GCN_5_layer
print: both
round: 4
run_dir: my_results/delay_GCN_5_layer/0
seed: 1
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 1506917
val: {'epoch': 0, 'loss': 1.0889, 'lr': 0.01, 'params': 1506917, 'time_iter': 1.3929, 'accuracy': 0.0156, 'average_precision': 0.0156, 'precision': 0.0156, 'recall': 1.0, 'f1': 0.0308, 'auc': 0.756}
val: {'epoch': 0, 'loss': 0.1294, 'lr': 0.0099, 'params': 1506917, 'time_iter': 6.9732, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3708}
train: {'epoch': 0, 'eta': 274245.818, 'loss': 0.2269, 'lr': 0.0099, 'params': 1506917, 'time_iter': 55.9457, 'accuracy': 0.9572, 'average_precision': 0.0396, 'precision': 0.1271, 'recall': 0.0244, 'f1': 0.0409, 'auc': 0.5128}
val: {'epoch': 1, 'loss': 0.154, 'lr': 0.0098, 'params': 1506917, 'time_iter': 6.891, 'accuracy': 0.9803, 'average_precision': 0.0909, 'precision': 0.5, 'recall': 0.1481, 'f1': 0.2286, 'auc': 0.5632}
train: {'epoch': 1, 'eta': 258120.3894, 'loss': 0.1792, 'lr': 0.0098, 'params': 1506917, 'time_iter': 55.2173, 'accuracy': 0.9628, 'average_precision': 0.0481, 'precision': 0.5854, 'recall': 0.0195, 'f1': 0.0377, 'auc': 0.538}
val: {'epoch': 2, 'loss': 0.1059, 'lr': 0.0095, 'params': 1506917, 'time_iter': 6.8849, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6023}
train: {'epoch': 2, 'eta': 242976.2802, 'loss': 0.1613, 'lr': 0.0095, 'params': 1506917, 'time_iter': 55.0315, 'accuracy': 0.9631, 'average_precision': 0.0592, 'precision': 0.6338, 'recall': 0.0365, 'f1': 0.0691, 'auc': 0.6063}
val: {'epoch': 3, 'loss': 0.0975, 'lr': 0.009, 'params': 1506917, 'time_iter': 6.9352, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5866}
train: {'epoch': 3, 'eta': 229068.6219, 'loss': 0.1491, 'lr': 0.009, 'params': 1506917, 'time_iter': 55.7713, 'accuracy': 0.9635, 'average_precision': 0.0711, 'precision': 0.6569, 'recall': 0.0544, 'f1': 0.1004, 'auc': 0.6739}
val: {'epoch': 4, 'loss': 0.119, 'lr': 0.0085, 'params': 1506917, 'time_iter': 6.869, 'accuracy': 0.981, 'average_precision': 0.1131, 'precision': 0.56, 'recall': 0.1728, 'f1': 0.2642, 'auc': 0.6486}
train: {'epoch': 4, 'eta': 214558.953, 'loss': 0.1462, 'lr': 0.0085, 'params': 1506917, 'time_iter': 55.2422, 'accuracy': 0.964, 'average_precision': 0.0848, 'precision': 0.6715, 'recall': 0.0747, 'f1': 0.1344, 'auc': 0.6805}
val: {'epoch': 5, 'loss': 0.176, 'lr': 0.0079, 'params': 1506917, 'time_iter': 6.836, 'accuracy': 0.9703, 'average_precision': 0.0802, 'precision': 0.253, 'recall': 0.2593, 'f1': 0.2561, 'auc': 0.6972}
train: {'epoch': 5, 'eta': 199947.1112, 'loss': 0.1472, 'lr': 0.0079, 'params': 1506917, 'time_iter': 54.9301, 'accuracy': 0.9635, 'average_precision': 0.0728, 'precision': 0.6429, 'recall': 0.0584, 'f1': 0.1071, 'auc': 0.6778}
val: {'epoch': 6, 'loss': 0.1324, 'lr': 0.0073, 'params': 1506917, 'time_iter': 6.9202, 'accuracy': 0.9745, 'average_precision': 0.0771, 'precision': 0.2931, 'recall': 0.2099, 'f1': 0.2446, 'auc': 0.659}
train: {'epoch': 6, 'eta': 185712.4446, 'loss': 0.1433, 'lr': 0.0073, 'params': 1506917, 'time_iter': 55.455, 'accuracy': 0.964, 'average_precision': 0.0855, 'precision': 0.6815, 'recall': 0.0747, 'f1': 0.1346, 'auc': 0.6995}
val: {'epoch': 7, 'loss': 0.1221, 'lr': 0.0065, 'params': 1506917, 'time_iter': 6.8618, 'accuracy': 0.9779, 'average_precision': 0.0855, 'precision': 0.375, 'recall': 0.1852, 'f1': 0.2479, 'auc': 0.7329}
train: {'epoch': 7, 'eta': 171192.3292, 'loss': 0.1419, 'lr': 0.0065, 'params': 1506917, 'time_iter': 54.7644, 'accuracy': 0.9639, 'average_precision': 0.0858, 'precision': 0.651, 'recall': 0.0787, 'f1': 0.1405, 'auc': 0.7037}
val: {'epoch': 8, 'loss': 0.1016, 'lr': 0.0058, 'params': 1506917, 'time_iter': 6.8656, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5164}
train: {'epoch': 8, 'eta': 156880.14, 'loss': 0.1396, 'lr': 0.0058, 'params': 1506917, 'time_iter': 55.1483, 'accuracy': 0.9643, 'average_precision': 0.0956, 'precision': 0.6609, 'recall': 0.0933, 'f1': 0.1636, 'auc': 0.7249}
val: {'epoch': 9, 'loss': 0.172, 'lr': 0.005, 'params': 1506917, 'time_iter': 6.873, 'accuracy': 0.9606, 'average_precision': 0.0835, 'precision': 0.2044, 'recall': 0.3457, 'f1': 0.2569, 'auc': 0.7206}
train: {'epoch': 9, 'eta': 142503.7105, 'loss': 0.1379, 'lr': 0.005, 'params': 1506917, 'time_iter': 54.8342, 'accuracy': 0.9637, 'average_precision': 0.088, 'precision': 0.6089, 'recall': 0.0885, 'f1': 0.1545, 'auc': 0.728}
val: {'epoch': 10, 'loss': 0.0902, 'lr': 0.0042, 'params': 1506917, 'time_iter': 6.9074, 'accuracy': 0.981, 'average_precision': 0.0956, 'precision': 0.5789, 'recall': 0.1358, 'f1': 0.22, 'auc': 0.7607}
train: {'epoch': 10, 'eta': 128190.5393, 'loss': 0.1364, 'lr': 0.0042, 'params': 1506917, 'time_iter': 54.9365, 'accuracy': 0.9648, 'average_precision': 0.1075, 'precision': 0.6911, 'recall': 0.1071, 'f1': 0.1855, 'auc': 0.7334}
val: {'epoch': 11, 'loss': 0.0834, 'lr': 0.0035, 'params': 1506917, 'time_iter': 6.8622, 'accuracy': 0.9818, 'average_precision': 0.0968, 'precision': 0.8, 'recall': 0.0988, 'f1': 0.1758, 'auc': 0.7511}
train: {'epoch': 11, 'eta': 113865.3004, 'loss': 0.1364, 'lr': 0.0035, 'params': 1506917, 'time_iter': 54.7311, 'accuracy': 0.9648, 'average_precision': 0.1101, 'precision': 0.6814, 'recall': 0.1128, 'f1': 0.1936, 'auc': 0.738}
val: {'epoch': 12, 'loss': 0.0882, 'lr': 0.0027, 'params': 1506917, 'time_iter': 6.9536, 'accuracy': 0.9808, 'average_precision': 0.0439, 'precision': 1.0, 'recall': 0.0247, 'f1': 0.0482, 'auc': 0.6856}
train: {'epoch': 12, 'eta': 99559.5539, 'loss': 0.1339, 'lr': 0.0027, 'params': 1506917, 'time_iter': 54.6448, 'accuracy': 0.9648, 'average_precision': 0.1094, 'precision': 0.6798, 'recall': 0.112, 'f1': 0.1923, 'auc': 0.7477}
val: {'epoch': 13, 'loss': 0.0833, 'lr': 0.0021, 'params': 1506917, 'time_iter': 6.8772, 'accuracy': 0.9813, 'average_precision': 0.0944, 'precision': 0.625, 'recall': 0.1235, 'f1': 0.2062, 'auc': 0.7597}
train: {'epoch': 13, 'eta': 85287.6484, 'loss': 0.132, 'lr': 0.0021, 'params': 1506917, 'time_iter': 54.6829, 'accuracy': 0.9651, 'average_precision': 0.1217, 'precision': 0.6778, 'recall': 0.1315, 'f1': 0.2203, 'auc': 0.7555}
val: {'epoch': 14, 'loss': 0.0816, 'lr': 0.0015, 'params': 1506917, 'time_iter': 6.8648, 'accuracy': 0.9815, 'average_precision': 0.0817, 'precision': 0.8571, 'recall': 0.0741, 'f1': 0.1364, 'auc': 0.7569}
train: {'epoch': 14, 'eta': 71041.6104, 'loss': 0.1306, 'lr': 0.0015, 'params': 1506917, 'time_iter': 54.7299, 'accuracy': 0.9654, 'average_precision': 0.1306, 'precision': 0.682, 'recall': 0.1445, 'f1': 0.2384, 'auc': 0.7647}
val: {'epoch': 15, 'loss': 0.0803, 'lr': 0.001, 'params': 1506917, 'time_iter': 6.8757, 'accuracy': 0.9815, 'average_precision': 0.1103, 'precision': 0.6316, 'recall': 0.1481, 'f1': 0.24, 'auc': 0.7539}
train: {'epoch': 15, 'eta': 56812.6898, 'loss': 0.1283, 'lr': 0.001, 'params': 1506917, 'time_iter': 54.7517, 'accuracy': 0.9659, 'average_precision': 0.1389, 'precision': 0.7057, 'recall': 0.1518, 'f1': 0.2498, 'auc': 0.7749}
val: {'epoch': 16, 'loss': 0.085, 'lr': 0.0005, 'params': 1506917, 'time_iter': 6.9041, 'accuracy': 0.9823, 'average_precision': 0.1201, 'precision': 0.8333, 'recall': 0.1235, 'f1': 0.2151, 'auc': 0.7383}
train: {'epoch': 16, 'eta': 42626.4451, 'loss': 0.1257, 'lr': 0.0005, 'params': 1506917, 'time_iter': 55.4229, 'accuracy': 0.9662, 'average_precision': 0.1487, 'precision': 0.7031, 'recall': 0.1672, 'f1': 0.2702, 'auc': 0.7851}
val: {'epoch': 17, 'loss': 0.0816, 'lr': 0.0002, 'params': 1506917, 'time_iter': 6.8807, 'accuracy': 0.982, 'average_precision': 0.1055, 'precision': 0.8889, 'recall': 0.0988, 'f1': 0.1778, 'auc': 0.7485}
train: {'epoch': 17, 'eta': 28428.1864, 'loss': 0.1247, 'lr': 0.0002, 'params': 1506917, 'time_iter': 55.4412, 'accuracy': 0.9667, 'average_precision': 0.159, 'precision': 0.7243, 'recall': 0.1769, 'f1': 0.2844, 'auc': 0.7921}
val: {'epoch': 18, 'loss': 0.0837, 'lr': 0.0001, 'params': 1506917, 'time_iter': 6.8763, 'accuracy': 0.981, 'average_precision': 0.0899, 'precision': 0.5882, 'recall': 0.1235, 'f1': 0.2041, 'auc': 0.7528}
train: {'epoch': 18, 'eta': 14218.3859, 'loss': 0.1227, 'lr': 0.0001, 'params': 1506917, 'time_iter': 55.4095, 'accuracy': 0.967, 'average_precision': 0.1654, 'precision': 0.7475, 'recall': 0.1802, 'f1': 0.2904, 'auc': 0.7969}
val: {'epoch': 19, 'loss': 0.0814, 'lr': 0.0, 'params': 1506917, 'time_iter': 6.8574, 'accuracy': 0.9823, 'average_precision': 0.1201, 'precision': 0.8333, 'recall': 0.1235, 'f1': 0.2151, 'auc': 0.7484}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.122, 'lr': 0.0, 'params': 1506917, 'time_iter': 54.8444, 'accuracy': 0.9669, 'average_precision': 0.1671, 'precision': 0.72, 'recall': 0.1899, 'f1': 0.3006, 'auc': 0.8014}
test: {'epoch': 20, 'loss': 0.1157, 'lr': 0.0, 'params': 1506917, 'time_iter': 5.3139, 'accuracy': 0.9716, 'average_precision': 0.1381, 'precision': 0.76, 'recall': 0.1462, 'f1': 0.2452, 'auc': 0.7464}
