GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer5): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer6): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer7): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer8): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer9): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 10
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/vanilla_GCN_10_layer
print: both
round: 4
run_dir: my_results/vanilla_GCN_10_layer/0
seed: 1
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 1053912
val: {'epoch': 0, 'loss': 2.0752, 'lr': 0.01, 'params': 1053912, 'time_iter': 0.6475, 'accuracy': 0.0156, 'average_precision': 0.0156, 'precision': 0.0156, 'recall': 1.0, 'f1': 0.0308, 'auc': 0.753}
val: {'epoch': 0, 'loss': 0.1432, 'lr': 0.0099, 'params': 1053912, 'time_iter': 0.866, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3606}
train: {'epoch': 0, 'eta': 56030.1385, 'loss': 0.2421, 'lr': 0.0099, 'params': 1053912, 'time_iter': 11.4301, 'accuracy': 0.9566, 'average_precision': 0.0374, 'precision': 0.0288, 'recall': 0.0049, 'f1': 0.0083, 'auc': 0.4327}
val: {'epoch': 1, 'loss': 0.1319, 'lr': 0.0098, 'params': 1053912, 'time_iter': 0.6908, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3143}
train: {'epoch': 1, 'eta': 48698.3182, 'loss': 0.192, 'lr': 0.0098, 'params': 1053912, 'time_iter': 9.5425, 'accuracy': 0.9625, 'average_precision': 0.0374, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4229}
val: {'epoch': 2, 'loss': 0.1048, 'lr': 0.0095, 'params': 1053912, 'time_iter': 0.692, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4123}
train: {'epoch': 2, 'eta': 44880.6217, 'loss': 0.172, 'lr': 0.0095, 'params': 1053912, 'time_iter': 9.7255, 'accuracy': 0.9626, 'average_precision': 0.0388, 'precision': 0.6, 'recall': 0.0024, 'f1': 0.0049, 'auc': 0.4876}
val: {'epoch': 3, 'loss': 0.0998, 'lr': 0.009, 'params': 1053912, 'time_iter': 0.6928, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6499}
train: {'epoch': 3, 'eta': 41526.4243, 'loss': 0.1627, 'lr': 0.009, 'params': 1053912, 'time_iter': 9.5407, 'accuracy': 0.9623, 'average_precision': 0.0382, 'precision': 0.2667, 'recall': 0.0032, 'f1': 0.0064, 'auc': 0.5361}
val: {'epoch': 4, 'loss': 0.1233, 'lr': 0.0085, 'params': 1053912, 'time_iter': 0.6924, 'accuracy': 0.9764, 'average_precision': 0.0217, 'precision': 0.1, 'recall': 0.0247, 'f1': 0.0396, 'auc': 0.6259}
train: {'epoch': 4, 'eta': 38497.2921, 'loss': 0.1569, 'lr': 0.0085, 'params': 1053912, 'time_iter': 9.4993, 'accuracy': 0.9626, 'average_precision': 0.0407, 'precision': 0.5333, 'recall': 0.0065, 'f1': 0.0128, 'auc': 0.5875}
val: {'epoch': 5, 'loss': 0.1198, 'lr': 0.0079, 'params': 1053912, 'time_iter': 0.6922, 'accuracy': 0.9762, 'average_precision': 0.0216, 'precision': 0.0952, 'recall': 0.0247, 'f1': 0.0392, 'auc': 0.6643}
train: {'epoch': 5, 'eta': 35676.3986, 'loss': 0.1569, 'lr': 0.0079, 'params': 1053912, 'time_iter': 9.525, 'accuracy': 0.9622, 'average_precision': 0.0394, 'precision': 0.3, 'recall': 0.0073, 'f1': 0.0143, 'auc': 0.5928}
val: {'epoch': 6, 'loss': 0.1048, 'lr': 0.0073, 'params': 1053912, 'time_iter': 0.6997, 'accuracy': 0.9793, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6305}
train: {'epoch': 6, 'eta': 33013.1817, 'loss': 0.1568, 'lr': 0.0073, 'params': 1053912, 'time_iter': 9.6374, 'accuracy': 0.9619, 'average_precision': 0.0385, 'precision': 0.2051, 'recall': 0.0065, 'f1': 0.0126, 'auc': 0.6034}
val: {'epoch': 7, 'loss': 0.0946, 'lr': 0.0065, 'params': 1053912, 'time_iter': 0.6904, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6143}
train: {'epoch': 7, 'eta': 30344.6926, 'loss': 0.1527, 'lr': 0.0065, 'params': 1053912, 'time_iter': 9.5096, 'accuracy': 0.9626, 'average_precision': 0.0476, 'precision': 0.52, 'recall': 0.0211, 'f1': 0.0406, 'auc': 0.6466}
val: {'epoch': 8, 'loss': 0.0984, 'lr': 0.0058, 'params': 1053912, 'time_iter': 0.6875, 'accuracy': 0.9801, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6688}
train: {'epoch': 8, 'eta': 27746.6285, 'loss': 0.1548, 'lr': 0.0058, 'params': 1053912, 'time_iter': 9.5814, 'accuracy': 0.9621, 'average_precision': 0.0383, 'precision': 0.2222, 'recall': 0.0049, 'f1': 0.0095, 'auc': 0.6319}
val: {'epoch': 9, 'loss': 0.1041, 'lr': 0.005, 'params': 1053912, 'time_iter': 0.6847, 'accuracy': 0.9796, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6646}
train: {'epoch': 9, 'eta': 25181.3093, 'loss': 0.1549, 'lr': 0.005, 'params': 1053912, 'time_iter': 9.6106, 'accuracy': 0.9619, 'average_precision': 0.0378, 'precision': 0.1429, 'recall': 0.0032, 'f1': 0.0063, 'auc': 0.6284}
val: {'epoch': 10, 'loss': 0.14, 'lr': 0.0042, 'params': 1053912, 'time_iter': 0.6896, 'accuracy': 0.9723, 'average_precision': 0.0644, 'precision': 0.2462, 'recall': 0.1975, 'f1': 0.2192, 'auc': 0.7037}
train: {'epoch': 10, 'eta': 22625.9976, 'loss': 0.1532, 'lr': 0.0042, 'params': 1053912, 'time_iter': 9.5841, 'accuracy': 0.962, 'average_precision': 0.0385, 'precision': 0.2258, 'recall': 0.0057, 'f1': 0.0111, 'auc': 0.6376}
val: {'epoch': 11, 'loss': 0.1262, 'lr': 0.0035, 'params': 1053912, 'time_iter': 0.6844, 'accuracy': 0.9769, 'average_precision': 0.0396, 'precision': 0.25, 'recall': 0.0864, 'f1': 0.1284, 'auc': 0.6666}
train: {'epoch': 11, 'eta': 20077.3844, 'loss': 0.1523, 'lr': 0.0035, 'params': 1053912, 'time_iter': 9.5429, 'accuracy': 0.9623, 'average_precision': 0.0412, 'precision': 0.3684, 'recall': 0.0114, 'f1': 0.022, 'auc': 0.6457}
val: {'epoch': 12, 'loss': 0.0899, 'lr': 0.0027, 'params': 1053912, 'time_iter': 0.6849, 'accuracy': 0.9801, 'average_precision': 0.0236, 'precision': 0.3333, 'recall': 0.0123, 'f1': 0.0238, 'auc': 0.6843}
train: {'epoch': 12, 'eta': 17539.1244, 'loss': 0.1511, 'lr': 0.0027, 'params': 1053912, 'time_iter': 9.5216, 'accuracy': 0.9624, 'average_precision': 0.0444, 'precision': 0.4468, 'recall': 0.017, 'f1': 0.0328, 'auc': 0.6617}
val: {'epoch': 13, 'loss': 0.0954, 'lr': 0.0021, 'params': 1053912, 'time_iter': 0.6855, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5192}
train: {'epoch': 13, 'eta': 15011.7993, 'loss': 0.1494, 'lr': 0.0021, 'params': 1053912, 'time_iter': 9.515, 'accuracy': 0.9627, 'average_precision': 0.048, 'precision': 0.5556, 'recall': 0.0203, 'f1': 0.0392, 'auc': 0.6749}
val: {'epoch': 14, 'loss': 0.1079, 'lr': 0.0015, 'params': 1053912, 'time_iter': 0.7924, 'accuracy': 0.9793, 'average_precision': 0.0803, 'precision': 0.4286, 'recall': 0.1481, 'f1': 0.2202, 'auc': 0.6947}
train: {'epoch': 14, 'eta': 12492.7391, 'loss': 0.1476, 'lr': 0.0015, 'params': 1053912, 'time_iter': 9.4988, 'accuracy': 0.9626, 'average_precision': 0.0476, 'precision': 0.52, 'recall': 0.0211, 'f1': 0.0406, 'auc': 0.6768}
val: {'epoch': 15, 'loss': 0.0878, 'lr': 0.001, 'params': 1053912, 'time_iter': 0.6977, 'accuracy': 0.9818, 'average_precision': 0.0923, 'precision': 1.0, 'recall': 0.0741, 'f1': 0.1379, 'auc': 0.6901}
train: {'epoch': 15, 'eta': 9986.3711, 'loss': 0.1457, 'lr': 0.001, 'params': 1053912, 'time_iter': 9.5631, 'accuracy': 0.9629, 'average_precision': 0.0552, 'precision': 0.5694, 'recall': 0.0333, 'f1': 0.0629, 'auc': 0.6904}
val: {'epoch': 16, 'loss': 0.0868, 'lr': 0.0005, 'params': 1053912, 'time_iter': 0.6904, 'accuracy': 0.9825, 'average_precision': 0.1353, 'precision': 0.8, 'recall': 0.1481, 'f1': 0.25, 'auc': 0.7281}
train: {'epoch': 16, 'eta': 7484.8874, 'loss': 0.1437, 'lr': 0.0005, 'params': 1053912, 'time_iter': 9.5693, 'accuracy': 0.9631, 'average_precision': 0.06, 'precision': 0.6049, 'recall': 0.0398, 'f1': 0.0746, 'auc': 0.6989}
val: {'epoch': 17, 'loss': 0.1509, 'lr': 0.0002, 'params': 1053912, 'time_iter': 0.6992, 'accuracy': 0.9667, 'average_precision': 0.0588, 'precision': 0.1957, 'recall': 0.2222, 'f1': 0.2081, 'auc': 0.6844}
train: {'epoch': 17, 'eta': 4988.9477, 'loss': 0.1423, 'lr': 0.0002, 'params': 1053912, 'time_iter': 9.6363, 'accuracy': 0.9631, 'average_precision': 0.0658, 'precision': 0.5752, 'recall': 0.0528, 'f1': 0.0967, 'auc': 0.7113}
val: {'epoch': 18, 'loss': 0.088, 'lr': 0.0001, 'params': 1053912, 'time_iter': 0.6847, 'accuracy': 0.982, 'average_precision': 0.1166, 'precision': 0.7333, 'recall': 0.1358, 'f1': 0.2292, 'auc': 0.7275}
train: {'epoch': 18, 'eta': 2492.5401, 'loss': 0.1406, 'lr': 0.0001, 'params': 1053912, 'time_iter': 9.5261, 'accuracy': 0.9638, 'average_precision': 0.0787, 'precision': 0.681, 'recall': 0.0641, 'f1': 0.1172, 'auc': 0.722}
val: {'epoch': 19, 'loss': 0.0847, 'lr': 0.0, 'params': 1053912, 'time_iter': 0.6976, 'accuracy': 0.982, 'average_precision': 0.1166, 'precision': 0.7333, 'recall': 0.1358, 'f1': 0.2292, 'auc': 0.7483}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1398, 'lr': 0.0, 'params': 1053912, 'time_iter': 9.7232, 'accuracy': 0.9638, 'average_precision': 0.079, 'precision': 0.678, 'recall': 0.0649, 'f1': 0.1185, 'auc': 0.7241}
test: {'epoch': 20, 'loss': 0.1213, 'lr': 0.0, 'params': 1053912, 'time_iter': 0.8604, 'accuracy': 0.9699, 'average_precision': 0.0789, 'precision': 0.8, 'recall': 0.0615, 'f1': 0.1143, 'auc': 0.7022}
