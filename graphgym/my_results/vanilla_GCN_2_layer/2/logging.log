GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 2
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/vanilla_GCN_2_layer
params: 329104
print: both
round: 4
run_dir: my_results/vanilla_GCN_2_layer/2
seed: 3
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 329104
val: {'epoch': 0, 'loss': 0.446, 'lr': 0.01, 'params': 329104, 'time_iter': 0.0576, 'accuracy': 0.9844, 'average_precision': 0.0156, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.37}
val: {'epoch': 0, 'loss': 0.1508, 'lr': 0.0099, 'params': 329104, 'time_iter': 0.5364, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3596}
train: {'epoch': 0, 'eta': 35537.8683, 'loss': 0.2142, 'lr': 0.0099, 'params': 329104, 'time_iter': 7.2497, 'accuracy': 0.9605, 'average_precision': 0.0408, 'precision': 0.2087, 'recall': 0.0195, 'f1': 0.0356, 'auc': 0.491}
val: {'epoch': 1, 'loss': 0.1174, 'lr': 0.0098, 'params': 329104, 'time_iter': 0.3544, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4669}
train: {'epoch': 1, 'eta': 29064.9744, 'loss': 0.1788, 'lr': 0.0098, 'params': 329104, 'time_iter': 5.2675, 'accuracy': 0.962, 'average_precision': 0.041, 'precision': 0.3137, 'recall': 0.013, 'f1': 0.0249, 'auc': 0.5498}
val: {'epoch': 2, 'loss': 0.0964, 'lr': 0.0095, 'params': 329104, 'time_iter': 0.3554, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6411}
train: {'epoch': 2, 'eta': 26209.8292, 'loss': 0.1577, 'lr': 0.0095, 'params': 329104, 'time_iter': 5.4102, 'accuracy': 0.9631, 'average_precision': 0.0589, 'precision': 0.6377, 'recall': 0.0357, 'f1': 0.0676, 'auc': 0.6279}
val: {'epoch': 3, 'loss': 0.1199, 'lr': 0.009, 'params': 329104, 'time_iter': 0.3535, 'accuracy': 0.9786, 'average_precision': 0.149, 'precision': 0.4386, 'recall': 0.3086, 'f1': 0.3623, 'auc': 0.7491}
train: {'epoch': 3, 'eta': 24086.5094, 'loss': 0.1486, 'lr': 0.009, 'params': 329104, 'time_iter': 5.4123, 'accuracy': 0.9636, 'average_precision': 0.0759, 'precision': 0.6525, 'recall': 0.0625, 'f1': 0.1141, 'auc': 0.6694}
val: {'epoch': 4, 'loss': 0.0918, 'lr': 0.0085, 'params': 329104, 'time_iter': 0.3534, 'accuracy': 0.9815, 'average_precision': 0.0852, 'precision': 0.7778, 'recall': 0.0864, 'f1': 0.1556, 'auc': 0.7303}
train: {'epoch': 4, 'eta': 22229.2628, 'loss': 0.1459, 'lr': 0.0085, 'params': 329104, 'time_iter': 5.3803, 'accuracy': 0.9637, 'average_precision': 0.0783, 'precision': 0.6585, 'recall': 0.0657, 'f1': 0.1196, 'auc': 0.6958}
val: {'epoch': 5, 'loss': 0.088, 'lr': 0.0079, 'params': 329104, 'time_iter': 0.355, 'accuracy': 0.9818, 'average_precision': 0.0923, 'precision': 1.0, 'recall': 0.0741, 'f1': 0.1379, 'auc': 0.7035}
train: {'epoch': 5, 'eta': 20577.6314, 'loss': 0.1431, 'lr': 0.0079, 'params': 329104, 'time_iter': 5.4621, 'accuracy': 0.9642, 'average_precision': 0.0913, 'precision': 0.6821, 'recall': 0.0836, 'f1': 0.149, 'auc': 0.699}
val: {'epoch': 6, 'loss': 0.0888, 'lr': 0.0073, 'params': 329104, 'time_iter': 0.3546, 'accuracy': 0.9813, 'average_precision': 0.0836, 'precision': 0.6667, 'recall': 0.0988, 'f1': 0.172, 'auc': 0.699}
train: {'epoch': 6, 'eta': 18967.2197, 'loss': 0.1438, 'lr': 0.0073, 'params': 329104, 'time_iter': 5.4036, 'accuracy': 0.9638, 'average_precision': 0.0807, 'precision': 0.6565, 'recall': 0.0698, 'f1': 0.1262, 'auc': 0.688}
val: {'epoch': 7, 'loss': 0.1066, 'lr': 0.0065, 'params': 329104, 'time_iter': 0.3537, 'accuracy': 0.9796, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5013}
train: {'epoch': 7, 'eta': 17401.2803, 'loss': 0.1412, 'lr': 0.0065, 'params': 329104, 'time_iter': 5.3788, 'accuracy': 0.9641, 'average_precision': 0.0912, 'precision': 0.6506, 'recall': 0.0877, 'f1': 0.1545, 'auc': 0.7101}
val: {'epoch': 8, 'loss': 0.0882, 'lr': 0.0058, 'params': 329104, 'time_iter': 0.3657, 'accuracy': 0.981, 'average_precision': 0.056, 'precision': 1.0, 'recall': 0.037, 'f1': 0.0714, 'auc': 0.6365}
train: {'epoch': 8, 'eta': 15869.6992, 'loss': 0.142, 'lr': 0.0058, 'params': 329104, 'time_iter': 5.3622, 'accuracy': 0.9643, 'average_precision': 0.0913, 'precision': 0.7071, 'recall': 0.0804, 'f1': 0.1443, 'auc': 0.6974}
val: {'epoch': 9, 'loss': 0.2294, 'lr': 0.005, 'params': 329104, 'time_iter': 0.355, 'accuracy': 0.9416, 'average_precision': 0.0605, 'precision': 0.1336, 'recall': 0.358, 'f1': 0.1946, 'auc': 0.6989}
train: {'epoch': 9, 'eta': 14355.7382, 'loss': 0.14, 'lr': 0.005, 'params': 329104, 'time_iter': 5.3157, 'accuracy': 0.9639, 'average_precision': 0.0881, 'precision': 0.638, 'recall': 0.0844, 'f1': 0.1491, 'auc': 0.7181}
val: {'epoch': 10, 'loss': 0.1091, 'lr': 0.0042, 'params': 329104, 'time_iter': 0.3574, 'accuracy': 0.9781, 'average_precision': 0.0443, 'precision': 0.3043, 'recall': 0.0864, 'f1': 0.1346, 'auc': 0.6961}
train: {'epoch': 10, 'eta': 12881.2035, 'loss': 0.1378, 'lr': 0.0042, 'params': 329104, 'time_iter': 5.3797, 'accuracy': 0.9647, 'average_precision': 0.1054, 'precision': 0.6862, 'recall': 0.1047, 'f1': 0.1817, 'auc': 0.7289}
val: {'epoch': 11, 'loss': 0.0953, 'lr': 0.0035, 'params': 329104, 'time_iter': 0.3625, 'accuracy': 0.9788, 'average_precision': 0.0817, 'precision': 0.4062, 'recall': 0.1605, 'f1': 0.2301, 'auc': 0.7357}
train: {'epoch': 11, 'eta': 11416.9231, 'loss': 0.1382, 'lr': 0.0035, 'params': 329104, 'time_iter': 5.3554, 'accuracy': 0.9642, 'average_precision': 0.0949, 'precision': 0.6534, 'recall': 0.0933, 'f1': 0.1634, 'auc': 0.7329}
val: {'epoch': 12, 'loss': 0.092, 'lr': 0.0027, 'params': 329104, 'time_iter': 0.3654, 'accuracy': 0.981, 'average_precision': 0.0582, 'precision': 0.8, 'recall': 0.0494, 'f1': 0.093, 'auc': 0.6984}
train: {'epoch': 12, 'eta': 9987.4096, 'loss': 0.1345, 'lr': 0.0027, 'params': 329104, 'time_iter': 5.5142, 'accuracy': 0.9651, 'average_precision': 0.1172, 'precision': 0.7014, 'recall': 0.1201, 'f1': 0.2051, 'auc': 0.7512}
val: {'epoch': 13, 'loss': 0.1028, 'lr': 0.0021, 'params': 329104, 'time_iter': 0.3571, 'accuracy': 0.9779, 'average_precision': 0.0481, 'precision': 0.3077, 'recall': 0.0988, 'f1': 0.1495, 'auc': 0.692}
train: {'epoch': 13, 'eta': 8547.9442, 'loss': 0.1327, 'lr': 0.0021, 'params': 329104, 'time_iter': 5.4153, 'accuracy': 0.9649, 'average_precision': 0.1123, 'precision': 0.6912, 'recall': 0.1144, 'f1': 0.1964, 'auc': 0.7499}
val: {'epoch': 14, 'loss': 0.0872, 'lr': 0.0015, 'params': 329104, 'time_iter': 0.3606, 'accuracy': 0.9813, 'average_precision': 0.0836, 'precision': 0.6667, 'recall': 0.0988, 'f1': 0.172, 'auc': 0.7159}
train: {'epoch': 14, 'eta': 7107.3053, 'loss': 0.1331, 'lr': 0.0015, 'params': 329104, 'time_iter': 5.3361, 'accuracy': 0.9652, 'average_precision': 0.1158, 'precision': 0.7172, 'recall': 0.1153, 'f1': 0.1986, 'auc': 0.7514}
val: {'epoch': 15, 'loss': 0.0849, 'lr': 0.001, 'params': 329104, 'time_iter': 0.3636, 'accuracy': 0.9813, 'average_precision': 0.0944, 'precision': 0.625, 'recall': 0.1235, 'f1': 0.2062, 'auc': 0.7622}
train: {'epoch': 15, 'eta': 5678.2526, 'loss': 0.1318, 'lr': 0.001, 'params': 329104, 'time_iter': 5.3918, 'accuracy': 0.9652, 'average_precision': 0.1198, 'precision': 0.692, 'recall': 0.1258, 'f1': 0.2129, 'auc': 0.7604}
val: {'epoch': 16, 'loss': 0.085, 'lr': 0.0005, 'params': 329104, 'time_iter': 0.3558, 'accuracy': 0.9813, 'average_precision': 0.1057, 'precision': 0.6, 'recall': 0.1481, 'f1': 0.2376, 'auc': 0.7487}
train: {'epoch': 16, 'eta': 4250.9997, 'loss': 0.1301, 'lr': 0.0005, 'params': 329104, 'time_iter': 5.3333, 'accuracy': 0.9656, 'average_precision': 0.1292, 'precision': 0.7186, 'recall': 0.1347, 'f1': 0.2269, 'auc': 0.7659}
val: {'epoch': 17, 'loss': 0.0878, 'lr': 0.0002, 'params': 329104, 'time_iter': 0.3613, 'accuracy': 0.9803, 'average_precision': 0.0909, 'precision': 0.5, 'recall': 0.1481, 'f1': 0.2286, 'auc': 0.7361}
train: {'epoch': 17, 'eta': 2832.7759, 'loss': 0.1277, 'lr': 0.0002, 'params': 329104, 'time_iter': 5.4496, 'accuracy': 0.966, 'average_precision': 0.1386, 'precision': 0.7222, 'recall': 0.1477, 'f1': 0.2453, 'auc': 0.7748}
val: {'epoch': 18, 'loss': 0.086, 'lr': 0.0001, 'params': 329104, 'time_iter': 0.3559, 'accuracy': 0.9805, 'average_precision': 0.1059, 'precision': 0.5185, 'recall': 0.1728, 'f1': 0.2593, 'auc': 0.7463}
train: {'epoch': 18, 'eta': 1414.3191, 'loss': 0.1263, 'lr': 0.0001, 'params': 329104, 'time_iter': 5.3375, 'accuracy': 0.966, 'average_precision': 0.1413, 'precision': 0.7074, 'recall': 0.155, 'f1': 0.2543, 'auc': 0.7796}
val: {'epoch': 19, 'loss': 0.0834, 'lr': 0.0, 'params': 329104, 'time_iter': 0.4617, 'accuracy': 0.9813, 'average_precision': 0.0836, 'precision': 0.6667, 'recall': 0.0988, 'f1': 0.172, 'auc': 0.7349}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1258, 'lr': 0.0, 'params': 329104, 'time_iter': 5.3739, 'accuracy': 0.966, 'average_precision': 0.1442, 'precision': 0.6982, 'recall': 0.1615, 'f1': 0.2624, 'auc': 0.7811}
test: {'epoch': 20, 'loss': 0.1199, 'lr': 0.0, 'params': 329104, 'time_iter': 0.5455, 'accuracy': 0.9701, 'average_precision': 0.1032, 'precision': 0.6522, 'recall': 0.1154, 'f1': 0.1961, 'auc': 0.7401}
Results aggregated across runs saved in my_results/vanilla_GCN_2_layer/agg
