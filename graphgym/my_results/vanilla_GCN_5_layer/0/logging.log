GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 5
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/vanilla_GCN_5_layer
print: both
round: 4
run_dir: my_results/vanilla_GCN_5_layer/0
seed: 1
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 600907
val: {'epoch': 0, 'loss': 2.588, 'lr': 0.01, 'params': 600907, 'time_iter': 0.6387, 'accuracy': 0.0156, 'average_precision': 0.0156, 'precision': 0.0156, 'recall': 1.0, 'f1': 0.0308, 'auc': 0.7827}
val: {'epoch': 0, 'loss': 0.1398, 'lr': 0.0099, 'params': 600907, 'time_iter': 0.6604, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3282}
train: {'epoch': 0, 'eta': 43301.327, 'loss': 0.2279, 'lr': 0.0099, 'params': 600907, 'time_iter': 8.8334, 'accuracy': 0.9568, 'average_precision': 0.038, 'precision': 0.0766, 'recall': 0.0138, 'f1': 0.0234, 'auc': 0.4781}
val: {'epoch': 1, 'loss': 0.1153, 'lr': 0.0098, 'params': 600907, 'time_iter': 0.4762, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.334}
train: {'epoch': 1, 'eta': 36482.0779, 'loss': 0.1889, 'lr': 0.0098, 'params': 600907, 'time_iter': 6.8781, 'accuracy': 0.9625, 'average_precision': 0.038, 'precision': 0.4, 'recall': 0.0016, 'f1': 0.0032, 'auc': 0.4331}
val: {'epoch': 2, 'loss': 0.1475, 'lr': 0.0095, 'params': 600907, 'time_iter': 0.4775, 'accuracy': 0.9791, 'average_precision': 0.0554, 'precision': 0.381, 'recall': 0.0988, 'f1': 0.1569, 'auc': 0.6323}
train: {'epoch': 2, 'eta': 33033.4846, 'loss': 0.1663, 'lr': 0.0095, 'params': 600907, 'time_iter': 6.8832, 'accuracy': 0.9625, 'average_precision': 0.0392, 'precision': 0.4, 'recall': 0.0049, 'f1': 0.0096, 'auc': 0.5232}
val: {'epoch': 3, 'loss': 0.1085, 'lr': 0.009, 'params': 600907, 'time_iter': 0.4966, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.383}
train: {'epoch': 3, 'eta': 30728.7383, 'loss': 0.1604, 'lr': 0.009, 'params': 600907, 'time_iter': 7.1812, 'accuracy': 0.9621, 'average_precision': 0.0379, 'precision': 0.1818, 'recall': 0.0032, 'f1': 0.0064, 'auc': 0.5752}
val: {'epoch': 4, 'loss': 0.1025, 'lr': 0.0085, 'params': 600907, 'time_iter': 0.4987, 'accuracy': 0.9798, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6887}
train: {'epoch': 4, 'eta': 28585.2971, 'loss': 0.1568, 'lr': 0.0085, 'params': 600907, 'time_iter': 7.156, 'accuracy': 0.9622, 'average_precision': 0.0394, 'precision': 0.3, 'recall': 0.0073, 'f1': 0.0143, 'auc': 0.6061}
val: {'epoch': 5, 'loss': 0.1415, 'lr': 0.0079, 'params': 600907, 'time_iter': 0.5004, 'accuracy': 0.9745, 'average_precision': 0.0413, 'precision': 0.2143, 'recall': 0.1111, 'f1': 0.1463, 'auc': 0.7102}
train: {'epoch': 5, 'eta': 26557.3326, 'loss': 0.1528, 'lr': 0.0079, 'params': 600907, 'time_iter': 7.1833, 'accuracy': 0.9625, 'average_precision': 0.044, 'precision': 0.4865, 'recall': 0.0146, 'f1': 0.0284, 'auc': 0.6416}
val: {'epoch': 6, 'loss': 0.1259, 'lr': 0.0073, 'params': 600907, 'time_iter': 0.4991, 'accuracy': 0.9767, 'average_precision': 0.0778, 'precision': 0.3333, 'recall': 0.1852, 'f1': 0.2381, 'auc': 0.7364}
train: {'epoch': 6, 'eta': 24568.2663, 'loss': 0.1524, 'lr': 0.0073, 'params': 600907, 'time_iter': 7.1603, 'accuracy': 0.9623, 'average_precision': 0.0419, 'precision': 0.4054, 'recall': 0.0122, 'f1': 0.0236, 'auc': 0.6503}
val: {'epoch': 7, 'loss': 0.0955, 'lr': 0.0065, 'params': 600907, 'time_iter': 0.5026, 'accuracy': 0.9798, 'average_precision': 0.0225, 'precision': 0.25, 'recall': 0.0123, 'f1': 0.0235, 'auc': 0.6963}
train: {'epoch': 7, 'eta': 22584.7749, 'loss': 0.1536, 'lr': 0.0065, 'params': 600907, 'time_iter': 7.0831, 'accuracy': 0.9623, 'average_precision': 0.0412, 'precision': 0.3939, 'recall': 0.0106, 'f1': 0.0206, 'auc': 0.642}
val: {'epoch': 8, 'loss': 0.0878, 'lr': 0.0058, 'params': 600907, 'time_iter': 0.4946, 'accuracy': 0.9815, 'average_precision': 0.0802, 'precision': 1.0, 'recall': 0.0617, 'f1': 0.1163, 'auc': 0.6785}
train: {'epoch': 8, 'eta': 20634.4424, 'loss': 0.1478, 'lr': 0.0058, 'params': 600907, 'time_iter': 7.0783, 'accuracy': 0.9627, 'average_precision': 0.0527, 'precision': 0.5441, 'recall': 0.03, 'f1': 0.0569, 'auc': 0.6785}
val: {'epoch': 9, 'loss': 0.1002, 'lr': 0.005, 'params': 600907, 'time_iter': 0.5083, 'accuracy': 0.9793, 'average_precision': 0.0516, 'precision': 0.3889, 'recall': 0.0864, 'f1': 0.1414, 'auc': 0.7409}
train: {'epoch': 9, 'eta': 18749.6083, 'loss': 0.1475, 'lr': 0.005, 'params': 600907, 'time_iter': 7.236, 'accuracy': 0.9632, 'average_precision': 0.0602, 'precision': 0.6351, 'recall': 0.0381, 'f1': 0.072, 'auc': 0.6746}
val: {'epoch': 10, 'loss': 0.226, 'lr': 0.0042, 'params': 600907, 'time_iter': 0.4918, 'accuracy': 0.947, 'average_precision': 0.063, 'precision': 0.1451, 'recall': 0.3457, 'f1': 0.2044, 'auc': 0.7016}
train: {'epoch': 10, 'eta': 16854.1122, 'loss': 0.1462, 'lr': 0.0042, 'params': 600907, 'time_iter': 7.17, 'accuracy': 0.9633, 'average_precision': 0.0678, 'precision': 0.6132, 'recall': 0.0528, 'f1': 0.0972, 'auc': 0.6963}
val: {'epoch': 11, 'loss': 0.0933, 'lr': 0.0035, 'params': 600907, 'time_iter': 0.4715, 'accuracy': 0.9805, 'average_precision': 0.0882, 'precision': 0.5238, 'recall': 0.1358, 'f1': 0.2157, 'auc': 0.7301}
train: {'epoch': 11, 'eta': 14932.8422, 'loss': 0.1482, 'lr': 0.0035, 'params': 600907, 'time_iter': 6.9759, 'accuracy': 0.9626, 'average_precision': 0.0491, 'precision': 0.5172, 'recall': 0.0244, 'f1': 0.0465, 'auc': 0.6784}
val: {'epoch': 12, 'loss': 0.0847, 'lr': 0.0027, 'params': 600907, 'time_iter': 0.5008, 'accuracy': 0.9818, 'average_precision': 0.0936, 'precision': 0.875, 'recall': 0.0864, 'f1': 0.1573, 'auc': 0.7686}
train: {'epoch': 12, 'eta': 13062.4388, 'loss': 0.1438, 'lr': 0.0027, 'params': 600907, 'time_iter': 7.2076, 'accuracy': 0.9638, 'average_precision': 0.0796, 'precision': 0.6562, 'recall': 0.0682, 'f1': 0.1235, 'auc': 0.7016}
val: {'epoch': 13, 'loss': 0.0901, 'lr': 0.0021, 'params': 600907, 'time_iter': 0.4989, 'accuracy': 0.9823, 'average_precision': 0.1165, 'precision': 1.0, 'recall': 0.0988, 'f1': 0.1798, 'auc': 0.6578}
train: {'epoch': 13, 'eta': 11188.9334, 'loss': 0.1411, 'lr': 0.0021, 'params': 600907, 'time_iter': 7.1655, 'accuracy': 0.964, 'average_precision': 0.0878, 'precision': 0.6644, 'recall': 0.0804, 'f1': 0.1434, 'auc': 0.7219}
val: {'epoch': 14, 'loss': 0.0903, 'lr': 0.0015, 'params': 600907, 'time_iter': 0.5007, 'accuracy': 0.9813, 'average_precision': 0.0681, 'precision': 1.0, 'recall': 0.0494, 'f1': 0.0941, 'auc': 0.5695}
train: {'epoch': 14, 'eta': 9325.5801, 'loss': 0.1393, 'lr': 0.0015, 'params': 600907, 'time_iter': 7.2451, 'accuracy': 0.9643, 'average_precision': 0.0941, 'precision': 0.6835, 'recall': 0.0877, 'f1': 0.1554, 'auc': 0.7277}
val: {'epoch': 15, 'loss': 0.0956, 'lr': 0.001, 'params': 600907, 'time_iter': 0.5015, 'accuracy': 0.9793, 'average_precision': 0.063, 'precision': 0.4091, 'recall': 0.1111, 'f1': 0.1748, 'auc': 0.7293}
train: {'epoch': 15, 'eta': 7461.4088, 'loss': 0.1382, 'lr': 0.001, 'params': 600907, 'time_iter': 7.2438, 'accuracy': 0.9647, 'average_precision': 0.1037, 'precision': 0.6906, 'recall': 0.1015, 'f1': 0.1769, 'auc': 0.7345}
val: {'epoch': 16, 'loss': 0.0917, 'lr': 0.0005, 'params': 600907, 'time_iter': 0.5003, 'accuracy': 0.9798, 'average_precision': 0.0675, 'precision': 0.45, 'recall': 0.1111, 'f1': 0.1782, 'auc': 0.7418}
train: {'epoch': 16, 'eta': 5595.4508, 'loss': 0.137, 'lr': 0.0005, 'params': 600907, 'time_iter': 7.2167, 'accuracy': 0.9648, 'average_precision': 0.1066, 'precision': 0.7033, 'recall': 0.1039, 'f1': 0.181, 'auc': 0.7439}
val: {'epoch': 17, 'loss': 0.0899, 'lr': 0.0002, 'params': 600907, 'time_iter': 0.5001, 'accuracy': 0.9805, 'average_precision': 0.0822, 'precision': 0.5263, 'recall': 0.1235, 'f1': 0.2, 'auc': 0.7508}
train: {'epoch': 17, 'eta': 3730.2861, 'loss': 0.1361, 'lr': 0.0002, 'params': 600907, 'time_iter': 7.2288, 'accuracy': 0.965, 'average_precision': 0.111, 'precision': 0.7189, 'recall': 0.108, 'f1': 0.1877, 'auc': 0.7478}
val: {'epoch': 18, 'loss': 0.088, 'lr': 0.0001, 'params': 600907, 'time_iter': 0.4976, 'accuracy': 0.9805, 'average_precision': 0.0763, 'precision': 0.5294, 'recall': 0.1111, 'f1': 0.1837, 'auc': 0.7358}
train: {'epoch': 18, 'eta': 1865.0506, 'loss': 0.1351, 'lr': 0.0001, 'params': 600907, 'time_iter': 7.2224, 'accuracy': 0.965, 'average_precision': 0.1123, 'precision': 0.6965, 'recall': 0.1136, 'f1': 0.1954, 'auc': 0.7553}
val: {'epoch': 19, 'loss': 0.0875, 'lr': 0.0, 'params': 600907, 'time_iter': 0.5065, 'accuracy': 0.981, 'average_precision': 0.0842, 'precision': 0.6, 'recall': 0.1111, 'f1': 0.1875, 'auc': 0.7398}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.134, 'lr': 0.0, 'params': 600907, 'time_iter': 7.2313, 'accuracy': 0.9649, 'average_precision': 0.1116, 'precision': 0.695, 'recall': 0.1128, 'f1': 0.1941, 'auc': 0.7608}
test: {'epoch': 20, 'loss': 0.1178, 'lr': 0.0, 'params': 600907, 'time_iter': 0.6817, 'accuracy': 0.9708, 'average_precision': 0.1262, 'precision': 0.6786, 'recall': 0.1462, 'f1': 0.2405, 'auc': 0.7405}
