GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 5
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/vanilla_GCN_5_layer
params: 600907
print: both
round: 4
run_dir: my_results/vanilla_GCN_5_layer/1
seed: 2
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 600907
val: {'epoch': 0, 'loss': 0.4519, 'lr': 0.01, 'params': 600907, 'time_iter': 0.0538, 'accuracy': 0.9844, 'average_precision': 0.0156, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4405}
val: {'epoch': 0, 'loss': 0.138, 'lr': 0.0099, 'params': 600907, 'time_iter': 0.7483, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3501}
train: {'epoch': 0, 'eta': 44773.8135, 'loss': 0.236, 'lr': 0.0099, 'params': 600907, 'time_iter': 9.1338, 'accuracy': 0.9592, 'average_precision': 0.0375, 'precision': 0.041, 'recall': 0.0041, 'f1': 0.0074, 'auc': 0.4298}
val: {'epoch': 1, 'loss': 0.1373, 'lr': 0.0098, 'params': 600907, 'time_iter': 0.4997, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4319}
train: {'epoch': 1, 'eta': 37943.3153, 'loss': 0.1862, 'lr': 0.0098, 'params': 600907, 'time_iter': 7.207, 'accuracy': 0.9624, 'average_precision': 0.0375, 'precision': 0.125, 'recall': 0.0008, 'f1': 0.0016, 'auc': 0.4492}
val: {'epoch': 2, 'loss': 0.1042, 'lr': 0.0095, 'params': 600907, 'time_iter': 0.4998, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4501}
train: {'epoch': 2, 'eta': 34334.341, 'loss': 0.1673, 'lr': 0.0095, 'params': 600907, 'time_iter': 7.1437, 'accuracy': 0.9625, 'average_precision': 0.0389, 'precision': 0.3846, 'recall': 0.0041, 'f1': 0.008, 'auc': 0.5191}
val: {'epoch': 3, 'loss': 0.1127, 'lr': 0.009, 'params': 600907, 'time_iter': 0.5012, 'accuracy': 0.9796, 'average_precision': 0.0479, 'precision': 0.4, 'recall': 0.0741, 'f1': 0.125, 'auc': 0.4746}
train: {'epoch': 3, 'eta': 31605.3751, 'loss': 0.1566, 'lr': 0.009, 'params': 600907, 'time_iter': 7.1409, 'accuracy': 0.9626, 'average_precision': 0.0428, 'precision': 0.5417, 'recall': 0.0106, 'f1': 0.0207, 'auc': 0.6138}
val: {'epoch': 4, 'loss': 0.1009, 'lr': 0.0085, 'params': 600907, 'time_iter': 0.4997, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4512}
train: {'epoch': 4, 'eta': 29271.6257, 'loss': 0.1489, 'lr': 0.0085, 'params': 600907, 'time_iter': 7.1933, 'accuracy': 0.963, 'average_precision': 0.0591, 'precision': 0.5926, 'recall': 0.039, 'f1': 0.0731, 'auc': 0.6683}
val: {'epoch': 5, 'loss': 0.0959, 'lr': 0.0079, 'params': 600907, 'time_iter': 0.503, 'accuracy': 0.9801, 'average_precision': 0.0236, 'precision': 0.3333, 'recall': 0.0123, 'f1': 0.0238, 'auc': 0.6299}
train: {'epoch': 5, 'eta': 27177.9965, 'loss': 0.1483, 'lr': 0.0079, 'params': 600907, 'time_iter': 7.3275, 'accuracy': 0.9629, 'average_precision': 0.0575, 'precision': 0.575, 'recall': 0.0373, 'f1': 0.0701, 'auc': 0.6773}
val: {'epoch': 6, 'loss': 0.0933, 'lr': 0.0073, 'params': 600907, 'time_iter': 0.5017, 'accuracy': 0.9798, 'average_precision': 0.0969, 'precision': 0.4667, 'recall': 0.1728, 'f1': 0.2523, 'auc': 0.7294}
train: {'epoch': 6, 'eta': 25066.7814, 'loss': 0.1473, 'lr': 0.0073, 'params': 600907, 'time_iter': 7.1697, 'accuracy': 0.9634, 'average_precision': 0.0701, 'precision': 0.6381, 'recall': 0.0544, 'f1': 0.1002, 'auc': 0.6697}
val: {'epoch': 7, 'loss': 0.0911, 'lr': 0.0065, 'params': 600907, 'time_iter': 0.5067, 'accuracy': 0.981, 'average_precision': 0.056, 'precision': 1.0, 'recall': 0.037, 'f1': 0.0714, 'auc': 0.7048}
train: {'epoch': 7, 'eta': 23000.3352, 'loss': 0.148, 'lr': 0.0065, 'params': 600907, 'time_iter': 7.1165, 'accuracy': 0.9631, 'average_precision': 0.0646, 'precision': 0.5941, 'recall': 0.0487, 'f1': 0.09, 'auc': 0.6745}
val: {'epoch': 8, 'loss': 0.0924, 'lr': 0.0058, 'params': 600907, 'time_iter': 0.505, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.5975}
train: {'epoch': 8, 'eta': 21014.5572, 'loss': 0.1454, 'lr': 0.0058, 'params': 600907, 'time_iter': 7.21, 'accuracy': 0.9636, 'average_precision': 0.0762, 'precision': 0.6423, 'recall': 0.0641, 'f1': 0.1166, 'auc': 0.697}
val: {'epoch': 9, 'loss': 0.2022, 'lr': 0.005, 'params': 600907, 'time_iter': 0.5009, 'accuracy': 0.9504, 'average_precision': 0.0763, 'precision': 0.1676, 'recall': 0.3827, 'f1': 0.2331, 'auc': 0.6962}
train: {'epoch': 9, 'eta': 19056.536, 'loss': 0.1447, 'lr': 0.005, 'params': 600907, 'time_iter': 7.2202, 'accuracy': 0.9635, 'average_precision': 0.0749, 'precision': 0.622, 'recall': 0.0641, 'f1': 0.1163, 'auc': 0.6922}
val: {'epoch': 10, 'loss': 0.0889, 'lr': 0.0042, 'params': 600907, 'time_iter': 0.5005, 'accuracy': 0.9818, 'average_precision': 0.0936, 'precision': 0.875, 'recall': 0.0864, 'f1': 0.1573, 'auc': 0.6726}
train: {'epoch': 10, 'eta': 17144.3107, 'loss': 0.1441, 'lr': 0.0042, 'params': 600907, 'time_iter': 7.3551, 'accuracy': 0.9635, 'average_precision': 0.0746, 'precision': 0.6172, 'recall': 0.0641, 'f1': 0.1162, 'auc': 0.7018}
val: {'epoch': 11, 'loss': 0.0946, 'lr': 0.0035, 'params': 600907, 'time_iter': 0.5032, 'accuracy': 0.9813, 'average_precision': 0.0944, 'precision': 0.625, 'recall': 0.1235, 'f1': 0.2062, 'auc': 0.7076}
train: {'epoch': 11, 'eta': 15212.1736, 'loss': 0.1427, 'lr': 0.0035, 'params': 600907, 'time_iter': 7.2252, 'accuracy': 0.9636, 'average_precision': 0.0791, 'precision': 0.6138, 'recall': 0.0722, 'f1': 0.1293, 'auc': 0.7027}
val: {'epoch': 12, 'loss': 0.1575, 'lr': 0.0027, 'params': 600907, 'time_iter': 0.5062, 'accuracy': 0.9645, 'average_precision': 0.0768, 'precision': 0.2124, 'recall': 0.2963, 'f1': 0.2474, 'auc': 0.7007}
train: {'epoch': 12, 'eta': 13278.4638, 'loss': 0.1413, 'lr': 0.0027, 'params': 600907, 'time_iter': 7.1385, 'accuracy': 0.9638, 'average_precision': 0.0855, 'precision': 0.6289, 'recall': 0.0812, 'f1': 0.1438, 'auc': 0.72}
val: {'epoch': 13, 'loss': 0.0945, 'lr': 0.0021, 'params': 600907, 'time_iter': 0.5006, 'accuracy': 0.9808, 'average_precision': 0.0467, 'precision': 0.75, 'recall': 0.037, 'f1': 0.0706, 'auc': 0.6386}
train: {'epoch': 13, 'eta': 11363.91, 'loss': 0.1434, 'lr': 0.0021, 'params': 600907, 'time_iter': 7.193, 'accuracy': 0.9638, 'average_precision': 0.081, 'precision': 0.6615, 'recall': 0.0698, 'f1': 0.1263, 'auc': 0.7068}
val: {'epoch': 14, 'loss': 0.2248, 'lr': 0.0015, 'params': 600907, 'time_iter': 0.5008, 'accuracy': 0.9431, 'average_precision': 0.0384, 'precision': 0.0995, 'recall': 0.2346, 'f1': 0.1397, 'auc': 0.6546}
train: {'epoch': 14, 'eta': 9467.9094, 'loss': 0.139, 'lr': 0.0015, 'params': 600907, 'time_iter': 7.3176, 'accuracy': 0.9642, 'average_precision': 0.0939, 'precision': 0.6588, 'recall': 0.0909, 'f1': 0.1598, 'auc': 0.7317}
val: {'epoch': 15, 'loss': 0.0875, 'lr': 0.001, 'params': 600907, 'time_iter': 0.5013, 'accuracy': 0.982, 'average_precision': 0.1422, 'precision': 0.64, 'recall': 0.1975, 'f1': 0.3019, 'auc': 0.7093}
train: {'epoch': 15, 'eta': 7562.8352, 'loss': 0.1382, 'lr': 0.001, 'params': 600907, 'time_iter': 7.1613, 'accuracy': 0.9641, 'average_precision': 0.0912, 'precision': 0.6625, 'recall': 0.086, 'f1': 0.1523, 'auc': 0.7374}
val: {'epoch': 16, 'loss': 0.1194, 'lr': 0.0005, 'params': 600907, 'time_iter': 0.4998, 'accuracy': 0.9725, 'average_precision': 0.0882, 'precision': 0.2838, 'recall': 0.2593, 'f1': 0.271, 'auc': 0.725}
train: {'epoch': 16, 'eta': 5667.1135, 'loss': 0.1357, 'lr': 0.0005, 'params': 600907, 'time_iter': 7.2182, 'accuracy': 0.9645, 'average_precision': 0.1015, 'precision': 0.6684, 'recall': 0.1015, 'f1': 0.1762, 'auc': 0.7458}
val: {'epoch': 17, 'loss': 0.0883, 'lr': 0.0002, 'params': 600907, 'time_iter': 0.5066, 'accuracy': 0.9818, 'average_precision': 0.1008, 'precision': 0.75, 'recall': 0.1111, 'f1': 0.1935, 'auc': 0.6246}
train: {'epoch': 17, 'eta': 3775.5473, 'loss': 0.1342, 'lr': 0.0002, 'params': 600907, 'time_iter': 7.2337, 'accuracy': 0.9647, 'average_precision': 0.1054, 'precision': 0.6862, 'recall': 0.1047, 'f1': 0.1817, 'auc': 0.753}
val: {'epoch': 18, 'loss': 0.0869, 'lr': 0.0001, 'params': 600907, 'time_iter': 0.5013, 'accuracy': 0.9818, 'average_precision': 0.1008, 'precision': 0.75, 'recall': 0.1111, 'f1': 0.1935, 'auc': 0.7034}
train: {'epoch': 18, 'eta': 1885.862, 'loss': 0.1327, 'lr': 0.0001, 'params': 600907, 'time_iter': 7.1762, 'accuracy': 0.9649, 'average_precision': 0.1107, 'precision': 0.701, 'recall': 0.1104, 'f1': 0.1907, 'auc': 0.7578}
val: {'epoch': 19, 'loss': 0.0866, 'lr': 0.0, 'params': 600907, 'time_iter': 0.506, 'accuracy': 0.9815, 'average_precision': 0.0944, 'precision': 0.6923, 'recall': 0.1111, 'f1': 0.1915, 'auc': 0.7238}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.131, 'lr': 0.0, 'params': 600907, 'time_iter': 7.1827, 'accuracy': 0.9651, 'average_precision': 0.1148, 'precision': 0.7179, 'recall': 0.1136, 'f1': 0.1962, 'auc': 0.7665}
test: {'epoch': 20, 'loss': 0.1209, 'lr': 0.0, 'params': 600907, 'time_iter': 0.7526, 'accuracy': 0.9689, 'average_precision': 0.0719, 'precision': 0.5556, 'recall': 0.0769, 'f1': 0.1351, 'auc': 0.7259}
