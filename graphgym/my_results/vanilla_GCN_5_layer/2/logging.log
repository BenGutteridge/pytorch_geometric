GraphGymModule(
  (model): GNN(
    (encoder): FeatureEncoder(
      (node_encoder): AtomEncoder(
        (atom_embedding_list): ModuleList(
          (0): Embedding(119, 300)
          (1): Embedding(4, 300)
          (2): Embedding(12, 300)
          (3): Embedding(12, 300)
          (4): Embedding(10, 300)
          (5): Embedding(6, 300)
          (6): Embedding(6, 300)
          (7): Embedding(2, 300)
          (8): Embedding(2, 300)
        )
      )
      (node_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
      (edge_encoder): BondEncoder(
        (bond_embedding_list): ModuleList(
          (0): Embedding(5, 300)
          (1): Embedding(6, 300)
          (2): Embedding(2, 300)
        )
      )
      (edge_encoder_bn): BatchNorm1dNode(
        (bn): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (pre_mp): GeneralMultiLayer(
      (Layer_0): GeneralLayer(
        (layer): Linear(
          (model): Linear(300, 300, bias=False)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (mp): GNNStackStage(
      (layer0): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer1): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer2): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer3): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
      (layer4): GeneralLayer(
        (layer): GCNConv(
          (model): GCNConv(300, 300)
        )
        (post_layer): Sequential(
          (0): BatchNorm1d(300, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (1): PReLU(num_parameters=1)
        )
      )
    )
    (post_mp): GNNGraphHead(
      (layer_post_mp): MLP(
        (model): Sequential(
          (0): Linear(
            (model): Linear(300, 1, bias=True)
          )
        )
      )
    )
  )
)
accelerator: cuda
benchmark: False
bn:
  eps: 1e-05
  mom: 0.1
cfg_dest: config.yaml
custom_metrics: []
dataset:
  cache_load: False
  cache_save: False
  dir: ./datasets
  edge_dim: 128
  edge_encoder: True
  edge_encoder_bn: True
  edge_encoder_name: Bond
  edge_message_ratio: 0.8
  edge_negative_sampling_ratio: 1.0
  edge_train_mode: all
  encoder: True
  encoder_bn: True
  encoder_dim: 128
  encoder_name: db
  format: OGB
  label_column: none
  label_table: none
  location: local
  name: ogbg-molhiv
  node_encoder: True
  node_encoder_bn: True
  node_encoder_name: Atom
  remove_feature: False
  resample_disjoint: False
  resample_negative: False
  shuffle_split: True
  split: [0.8, 0.1, 0.1]
  split_mode: random
  task: graph
  task_type: classification
  to_undirected: False
  transductive: False
  transform: none
  tu_simple: True
delay:
  max_k: 10
  num_layers: 10
devices: None
gnn:
  act: prelu
  agg: mean
  att_final_linear: False
  att_final_linear_bn: False
  att_heads: 1
  batchnorm: True
  clear_feature: True
  dim_inner: 300
  dropout: 0.0
  head: graph
  keep_edge: 0.5
  l2norm: True
  layer_type: gcnconv
  layers_mp: 5
  layers_post_mp: 1
  layers_pre_mp: 1
  msg_direction: single
  normalize_adj: False
  self_msg: concat
  skip_every: 1
  stage_type: stack
gpu_mem: False
mem:
  inplace: False
metric_agg: argmax
metric_best: auto
model:
  edge_decoding: dot
  graph_pooling: add
  loss_fun: cross_entropy
  match_upper: True
  size_average: mean
  thresh: 0.5
  type: gnn
num_threads: 6
num_workers: 0
optim:
  base_lr: 0.01
  lr_decay: 0.1
  max_epoch: 20
  momentum: 0.9
  optimizer: adam
  scheduler: cos
  steps: [30, 60, 90]
  weight_decay: 0.0005
out_dir: my_results/vanilla_GCN_5_layer
params: 600907
print: both
round: 4
run_dir: my_results/vanilla_GCN_5_layer/2
seed: 3
share:
  dim_in: 9
  dim_out: 2
  num_splits: 3
tensorboard_agg: True
tensorboard_each_run: False
train:
  auto_resume: False
  batch_size: 128
  ckpt_clean: True
  ckpt_period: 100
  enable_ckpt: True
  epoch_resume: -1
  eval_period: 1
  iter_per_epoch: 32
  neighbor_sizes: [20, 15, 10, 5]
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
  skip_train_eval: False
  walk_length: 4
val:
  node_per_graph: 32
  radius: extend
  sample_node: False
  sampler: full_batch
view_emb: False
Num parameters: 600907
val: {'epoch': 0, 'loss': 1.2156, 'lr': 0.01, 'params': 600907, 'time_iter': 0.0657, 'accuracy': 0.0156, 'average_precision': 0.0156, 'precision': 0.0156, 'recall': 1.0, 'f1': 0.0308, 'auc': 0.7748}
val: {'epoch': 0, 'loss': 0.1595, 'lr': 0.0099, 'params': 600907, 'time_iter': 0.6622, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3379}
train: {'epoch': 0, 'eta': 44645.8969, 'loss': 0.2366, 'lr': 0.0099, 'params': 600907, 'time_iter': 9.1077, 'accuracy': 0.9569, 'average_precision': 0.038, 'precision': 0.0773, 'recall': 0.0138, 'f1': 0.0234, 'auc': 0.4545}
val: {'epoch': 1, 'loss': 0.1129, 'lr': 0.0098, 'params': 600907, 'time_iter': 0.4839, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.3957}
train: {'epoch': 1, 'eta': 37427.8289, 'loss': 0.1909, 'lr': 0.0098, 'params': 600907, 'time_iter': 7.0111, 'accuracy': 0.9622, 'average_precision': 0.0374, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4332}
val: {'epoch': 2, 'loss': 0.0966, 'lr': 0.0095, 'params': 600907, 'time_iter': 0.4825, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6082}
train: {'epoch': 2, 'eta': 33762.9349, 'loss': 0.1671, 'lr': 0.0095, 'params': 600907, 'time_iter': 6.9749, 'accuracy': 0.9626, 'average_precision': 0.0386, 'precision': 0.5, 'recall': 0.0024, 'f1': 0.0048, 'auc': 0.5419}
val: {'epoch': 3, 'loss': 0.1028, 'lr': 0.009, 'params': 600907, 'time_iter': 0.578, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4595}
train: {'epoch': 3, 'eta': 30946.4238, 'loss': 0.1534, 'lr': 0.009, 'params': 600907, 'time_iter': 6.8932, 'accuracy': 0.9626, 'average_precision': 0.046, 'precision': 0.5385, 'recall': 0.017, 'f1': 0.033, 'auc': 0.6422}
val: {'epoch': 4, 'loss': 0.1506, 'lr': 0.0085, 'params': 600907, 'time_iter': 0.4865, 'accuracy': 0.9713, 'average_precision': 0.0701, 'precision': 0.2466, 'recall': 0.2222, 'f1': 0.2338, 'auc': 0.5792}
train: {'epoch': 4, 'eta': 28598.7631, 'loss': 0.1535, 'lr': 0.0085, 'params': 600907, 'time_iter': 6.9625, 'accuracy': 0.9622, 'average_precision': 0.0439, 'precision': 0.4, 'recall': 0.0179, 'f1': 0.0342, 'auc': 0.6395}
val: {'epoch': 5, 'loss': 0.1023, 'lr': 0.0079, 'params': 600907, 'time_iter': 0.5002, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.4149}
train: {'epoch': 5, 'eta': 26490.457, 'loss': 0.1523, 'lr': 0.0079, 'params': 600907, 'time_iter': 7.0548, 'accuracy': 0.9626, 'average_precision': 0.047, 'precision': 0.5102, 'recall': 0.0203, 'f1': 0.039, 'auc': 0.6471}
val: {'epoch': 6, 'loss': 0.091, 'lr': 0.0073, 'params': 600907, 'time_iter': 0.5138, 'accuracy': 0.981, 'average_precision': 0.056, 'precision': 1.0, 'recall': 0.037, 'f1': 0.0714, 'auc': 0.6175}
train: {'epoch': 6, 'eta': 24530.6848, 'loss': 0.154, 'lr': 0.0073, 'params': 600907, 'time_iter': 7.1929, 'accuracy': 0.9622, 'average_precision': 0.0414, 'precision': 0.3659, 'recall': 0.0122, 'f1': 0.0236, 'auc': 0.6264}
val: {'epoch': 7, 'loss': 0.0913, 'lr': 0.0065, 'params': 600907, 'time_iter': 0.5014, 'accuracy': 0.9813, 'average_precision': 0.0785, 'precision': 0.7, 'recall': 0.0864, 'f1': 0.1538, 'auc': 0.6152}
train: {'epoch': 7, 'eta': 22576.4166, 'loss': 0.1479, 'lr': 0.0065, 'params': 600907, 'time_iter': 7.14, 'accuracy': 0.9627, 'average_precision': 0.0517, 'precision': 0.5385, 'recall': 0.0284, 'f1': 0.054, 'auc': 0.6863}
val: {'epoch': 8, 'loss': 0.0997, 'lr': 0.0058, 'params': 600907, 'time_iter': 0.4954, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6815}
train: {'epoch': 8, 'eta': 20663.0745, 'loss': 0.1506, 'lr': 0.0058, 'params': 600907, 'time_iter': 7.1907, 'accuracy': 0.9627, 'average_precision': 0.0526, 'precision': 0.5278, 'recall': 0.0308, 'f1': 0.0583, 'auc': 0.6589}
val: {'epoch': 9, 'loss': 0.0996, 'lr': 0.005, 'params': 600907, 'time_iter': 0.5009, 'accuracy': 0.9803, 'average_precision': 0.0197, 'precision': 0.0, 'recall': 0.0, 'f1': 0.0, 'auc': 0.6099}
train: {'epoch': 9, 'eta': 18744.5817, 'loss': 0.1498, 'lr': 0.005, 'params': 600907, 'time_iter': 7.1257, 'accuracy': 0.9627, 'average_precision': 0.049, 'precision': 0.5625, 'recall': 0.0219, 'f1': 0.0422, 'auc': 0.6687}
val: {'epoch': 10, 'loss': 0.0911, 'lr': 0.0042, 'params': 600907, 'time_iter': 0.5001, 'accuracy': 0.9805, 'average_precision': 0.0318, 'precision': 1.0, 'recall': 0.0123, 'f1': 0.0244, 'auc': 0.6316}
train: {'epoch': 10, 'eta': 16847.5172, 'loss': 0.1487, 'lr': 0.0042, 'params': 600907, 'time_iter': 7.1582, 'accuracy': 0.9626, 'average_precision': 0.0512, 'precision': 0.507, 'recall': 0.0292, 'f1': 0.0553, 'auc': 0.6751}
val: {'epoch': 11, 'loss': 0.0922, 'lr': 0.0035, 'params': 600907, 'time_iter': 0.5028, 'accuracy': 0.9805, 'average_precision': 0.0318, 'precision': 1.0, 'recall': 0.0123, 'f1': 0.0244, 'auc': 0.6859}
train: {'epoch': 11, 'eta': 14978.4179, 'loss': 0.1442, 'lr': 0.0035, 'params': 600907, 'time_iter': 7.2722, 'accuracy': 0.9637, 'average_precision': 0.0756, 'precision': 0.6727, 'recall': 0.0601, 'f1': 0.1103, 'auc': 0.6986}
val: {'epoch': 12, 'loss': 0.0845, 'lr': 0.0027, 'params': 600907, 'time_iter': 0.5007, 'accuracy': 0.9818, 'average_precision': 0.0923, 'precision': 1.0, 'recall': 0.0741, 'f1': 0.1379, 'auc': 0.7364}
train: {'epoch': 12, 'eta': 13084.9514, 'loss': 0.1445, 'lr': 0.0027, 'params': 600907, 'time_iter': 7.1046, 'accuracy': 0.9633, 'average_precision': 0.07, 'precision': 0.595, 'recall': 0.0584, 'f1': 0.1064, 'auc': 0.6965}
val: {'epoch': 13, 'loss': 0.0855, 'lr': 0.0021, 'params': 600907, 'time_iter': 0.4993, 'accuracy': 0.982, 'average_precision': 0.1122, 'precision': 0.7692, 'recall': 0.1235, 'f1': 0.2128, 'auc': 0.7595}
train: {'epoch': 13, 'eta': 11204.9019, 'loss': 0.1423, 'lr': 0.0021, 'params': 600907, 'time_iter': 7.1479, 'accuracy': 0.964, 'average_precision': 0.0852, 'precision': 0.6765, 'recall': 0.0747, 'f1': 0.1345, 'auc': 0.708}
val: {'epoch': 14, 'loss': 0.0834, 'lr': 0.0015, 'params': 600907, 'time_iter': 0.5067, 'accuracy': 0.9825, 'average_precision': 0.1319, 'precision': 0.8462, 'recall': 0.1358, 'f1': 0.234, 'auc': 0.7527}
train: {'epoch': 14, 'eta': 9326.7119, 'loss': 0.1445, 'lr': 0.0015, 'params': 600907, 'time_iter': 7.1138, 'accuracy': 0.9627, 'average_precision': 0.0507, 'precision': 0.5323, 'recall': 0.0268, 'f1': 0.051, 'auc': 0.7103}
val: {'epoch': 15, 'loss': 0.0828, 'lr': 0.001, 'params': 600907, 'time_iter': 0.5077, 'accuracy': 0.9813, 'average_precision': 0.0681, 'precision': 1.0, 'recall': 0.0494, 'f1': 0.0941, 'auc': 0.756}
train: {'epoch': 15, 'eta': 7453.5978, 'loss': 0.141, 'lr': 0.001, 'params': 600907, 'time_iter': 7.1095, 'accuracy': 0.9641, 'average_precision': 0.0886, 'precision': 0.6806, 'recall': 0.0795, 'f1': 0.1424, 'auc': 0.7204}
val: {'epoch': 16, 'loss': 0.0854, 'lr': 0.0005, 'params': 600907, 'time_iter': 0.501, 'accuracy': 0.9801, 'average_precision': 0.0761, 'precision': 0.4762, 'recall': 0.1235, 'f1': 0.1961, 'auc': 0.7538}
train: {'epoch': 16, 'eta': 5587.57, 'loss': 0.1372, 'lr': 0.0005, 'params': 600907, 'time_iter': 7.1647, 'accuracy': 0.9641, 'average_precision': 0.0906, 'precision': 0.6667, 'recall': 0.0844, 'f1': 0.1499, 'auc': 0.7494}
val: {'epoch': 17, 'loss': 0.089, 'lr': 0.0002, 'params': 600907, 'time_iter': 0.4931, 'accuracy': 0.9801, 'average_precision': 0.0642, 'precision': 0.4706, 'recall': 0.0988, 'f1': 0.1633, 'auc': 0.7481}
train: {'epoch': 17, 'eta': 3726.594, 'loss': 0.1368, 'lr': 0.0002, 'params': 600907, 'time_iter': 7.2731, 'accuracy': 0.9643, 'average_precision': 0.0994, 'precision': 0.6578, 'recall': 0.0998, 'f1': 0.1734, 'auc': 0.7518}
val: {'epoch': 18, 'loss': 0.0879, 'lr': 0.0001, 'params': 600907, 'time_iter': 0.4869, 'accuracy': 0.9808, 'average_precision': 0.0858, 'precision': 0.5556, 'recall': 0.1235, 'f1': 0.202, 'auc': 0.7516}
train: {'epoch': 18, 'eta': 1859.4591, 'loss': 0.134, 'lr': 0.0001, 'params': 600907, 'time_iter': 6.9394, 'accuracy': 0.9644, 'average_precision': 0.0995, 'precision': 0.6742, 'recall': 0.0974, 'f1': 0.1702, 'auc': 0.7712}
val: {'epoch': 19, 'loss': 0.0878, 'lr': 0.0, 'params': 600907, 'time_iter': 0.5053, 'accuracy': 0.9805, 'average_precision': 0.0822, 'precision': 0.5263, 'recall': 0.1235, 'f1': 0.2, 'auc': 0.7583}
train: {'epoch': 19, 'eta': 0.0, 'loss': 0.1332, 'lr': 0.0, 'params': 600907, 'time_iter': 7.0826, 'accuracy': 0.9647, 'average_precision': 0.1058, 'precision': 0.6957, 'recall': 0.1039, 'f1': 0.1808, 'auc': 0.7722}
test: {'epoch': 20, 'loss': 0.1198, 'lr': 0.0, 'params': 600907, 'time_iter': 0.677, 'accuracy': 0.9701, 'average_precision': 0.1, 'precision': 0.6667, 'recall': 0.1077, 'f1': 0.1854, 'auc': 0.7404}
Results aggregated across runs saved in my_results/vanilla_GCN_5_layer/agg
